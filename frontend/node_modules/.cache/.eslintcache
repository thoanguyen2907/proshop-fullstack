[{"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/index.js":"1","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/serviceWorker.js":"2","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/App.js":"3","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/components/Header.js":"4","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/components/Footer.js":"5","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/HomeScreen.js":"6","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/products.js":"7","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/components/Product.js":"8","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/components/Rating.js":"9","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/utils/history/history.js":"10","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/ProductScreen.js":"11","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/redux/reducer/productReducer.js":"12","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/redux/constants/constants.js":"13","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/redux/actions/productAction.js":"14","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/redux/rootReducer.js":"15","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/CartScreen.js":"16","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/redux/reducer/cartReducer.js":"17","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/redux/actions/cartAction.js":"18","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/redux/reducer/userReducer.js":"19","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/LoginScreen.js":"20","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/redux/actions/userAction.js":"21","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/RegisterScreen.js":"22","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/ProfileScreen.js":"23","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/ShippingScreen.js":"24","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/components/CheckoutSteps.js":"25","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/PaymentScreen.js":"26","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/PlaceOrderScreen.js":"27","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/redux/reducer/orderReducer.js":"28","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/redux/actions/orderAction.js":"29","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/OrderScreen.js":"30","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/UserScreen.js":"31","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/UserEditScreen.js":"32","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/ProductListScreen.js":"33","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/ProductEditScreen.js":"34","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/ProductCreateScreen.js":"35","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/OrderListScreen.js":"36"},{"size":656,"mtime":1642580651852,"results":"37","hashOfConfig":"38"},{"size":5086,"mtime":1642350685286,"results":"39","hashOfConfig":"38"},{"size":2308,"mtime":1642944061330,"results":"40","hashOfConfig":"38"},{"size":2768,"mtime":1642965033433,"results":"41","hashOfConfig":"38"},{"size":235,"mtime":1642965055450,"results":"42","hashOfConfig":"38"},{"size":1038,"mtime":1642453466954,"results":"43","hashOfConfig":"38"},{"size":2486,"mtime":1642406581852,"results":"44","hashOfConfig":"38"},{"size":932,"mtime":1642967202707,"results":"45","hashOfConfig":"38"},{"size":729,"mtime":1642362836096,"results":"46","hashOfConfig":"38"},{"size":93,"mtime":1642364749757,"results":"47","hashOfConfig":"38"},{"size":6303,"mtime":1642967132595,"results":"48","hashOfConfig":"38"},{"size":3001,"mtime":1642952440529,"results":"49","hashOfConfig":"38"},{"size":4365,"mtime":1642952394362,"results":"50","hashOfConfig":"38"},{"size":4986,"mtime":1642964041017,"results":"51","hashOfConfig":"38"},{"size":2114,"mtime":1642952455227,"results":"52","hashOfConfig":"38"},{"size":3499,"mtime":1642965949040,"results":"53","hashOfConfig":"38"},{"size":1033,"mtime":1642667985781,"results":"54","hashOfConfig":"38"},{"size":1874,"mtime":1642674142851,"results":"55","hashOfConfig":"38"},{"size":3545,"mtime":1642842816721,"results":"56","hashOfConfig":"38"},{"size":1512,"mtime":1642579709443,"results":"57","hashOfConfig":"38"},{"size":5985,"mtime":1642851554169,"results":"58","hashOfConfig":"38"},{"size":2332,"mtime":1642582519740,"results":"59","hashOfConfig":"38"},{"size":4502,"mtime":1642847885584,"results":"60","hashOfConfig":"38"},{"size":1948,"mtime":1642633939158,"results":"61","hashOfConfig":"38"},{"size":1324,"mtime":1642966400064,"results":"62","hashOfConfig":"38"},{"size":1363,"mtime":1642667869296,"results":"63","hashOfConfig":"38"},{"size":6896,"mtime":1642966539956,"results":"64","hashOfConfig":"38"},{"size":3108,"mtime":1642946789698,"results":"65","hashOfConfig":"38"},{"size":5243,"mtime":1642947520939,"results":"66","hashOfConfig":"38"},{"size":7337,"mtime":1642966581817,"results":"67","hashOfConfig":"38"},{"size":2662,"mtime":1642852026708,"results":"68","hashOfConfig":"38"},{"size":2739,"mtime":1642856861680,"results":"69","hashOfConfig":"38"},{"size":2550,"mtime":1642965950788,"results":"70","hashOfConfig":"38"},{"size":3986,"mtime":1642943205460,"results":"71","hashOfConfig":"38"},{"size":3195,"mtime":1642941836154,"results":"72","hashOfConfig":"38"},{"size":2862,"mtime":1642948462192,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},"f861z",{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"77"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"77"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"77"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"77"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"77"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"77"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"77"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"77"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"77"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"77"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/index.js",["165","166"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { store } from './redux/rootReducer';\nimport Popper from 'popper.js';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n",["167","168"],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/serviceWorker.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/App.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/components/Header.js",["169","170","171"],"import React from 'react'\nimport { Nav } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { logout } from '../redux/actions/userAction';\nexport default function Header() {\n  const dispatch = useDispatch()\n  const  {loading, error, userInfo} = useSelector(state => state.userLogin)\n\n  const logoutHandler = () => {\n    console.log('logoutHandler');\n    dispatch(logout())\n  }\n    return (\n        <div>\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <div className=\"container\">\n    <NavLink className=\"navbar-brand\" to=\"/\">Proshop</NavLink>\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\" />\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link text-white\" to=\"/cart\"> <i className=\"fas fa-shopping-cart\"></i> Cart</NavLink>\n        </li>\n          {\n            userInfo? (\n    <div className=\"dropdown mx-2\">\n  <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n    {userInfo.name}\n  </button>\n  <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n    <NavLink to = \"/profile\">   <li className=\"dropdown-item\" to = \"/profile\">Profile</li></NavLink>\n    <li className=\"dropdown-item\" onClick={logoutHandler}> Logout\n    </li>\n  </div>\n</div>) : <NavLink className=\"nav-link text-white\" to=\"/login\"> <i className=\"fas fa-user\"></i> Sign in</NavLink>\n          }\n    \n    {userInfo && userInfo.isAdmin && (\n                <div className=\"dropdown\">\n                    <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButtonAdmin\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n  Admin\n  </button>\n  <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButtonAdmin\">\n\n                \n                    <NavLink to = \"/admin/users\">   <li className=\"dropdown-item\">Users</li></NavLink>\n             \n             \n                    <NavLink to = \"/admin/products\"> <li className=\"dropdown-item\"> Products</li></NavLink>\n           \n          \n                    <NavLink to = \"/admin/orders\"> <li className=\"dropdown-item\"> Orders </li> </NavLink>\n              \n                  </div>\n                </div>\n              )} \n       \n      </ul>\n    </div>\n  </div>\n</nav>\n        </div>\n    )\n}\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/components/Footer.js",["172","173","174"],"import React from 'react'\nimport { Row, Container, Col } from 'react-bootstrap';\nexport default function Footer() {\n    return (\n       <footer className='text-center'>\n                Copyright &copy; Proshop\n       </footer>\n    )\n}\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/HomeScreen.js",["175","176","177","178","179"],"import React, { useEffect, useState } from 'react'\nimport Product from '../components/Product'\nimport products from '../products'\nimport axios from 'axios'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listProducts } from '../redux/actions/productAction'\nexport default function HomeScreen() {\n\n    const dispatch = useDispatch()\n    const {products, loading, error} = useSelector(state => state.productReducer)\n\n    useEffect(() => {\n        dispatch(listProducts())\n    }, []);\n    return (\n        <>\n          <h1 className='text-center'>Latest Products</h1>\n          {loading? <h1 className='text-center'>Loading ...</h1> :  <div className=\"container\">\n          <div className=\"row\">\n              {products?.map((product, index) => {\n                  return   <div key = {index} className=\"col-3 col-lg-3 col-md-6 col-sm-12\">\n                     \n                      <Product product = {product}/>\n                  </div>\n              })}\n            </div>\n          </div>}\n         \n        </>\n    )\n}\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/products.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/components/Product.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/components/Rating.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/utils/history/history.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/ProductScreen.js",["180","181","182","183"],"import React, { useEffect, useState } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport Rating from '../components/Rating'\nimport axios from 'axios'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createProductReview, getProductById } from '../redux/actions/productAction'\n\nexport default function ProductScreen({history, match}) {\n    const [qty, setQty] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n\n    const dispatch = useDispatch()\n    const {product, loading, error} = useSelector(state => state?.productReducer)\n    console.log('product', product);\n    const productReviewCreate = useSelector((state) => state?.productReviewCreate)\n  const {\n    success: successProductReview,\n    loading: loadingProductReview,\n    error: errorProductReview,\n  } = productReviewCreate\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n\n    useEffect(() => {\n        dispatch(getProductById(match.params.id))\n\n    }, [match.params.id, dispatch]);\n    \nconst submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      createProductReview(match.params.id, {\n        rating,\n        comment,\n      })\n    )\n  }\n\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n\n    }\n    return (\n        <div>\n            <NavLink className=\"btn btn-dark my-3\" to = \"/\">Go Back</NavLink>\n            <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-6\">\n                <img src={product?.image} alt={product?.name} style={{height: \"350px\", width: \"400px\"}} />\n                </div>\n                <div className=\"col-3\">\n                <ul className=\"list-group list-group-flush\"> \n                <li className=\"list-group-item\">  <h4>{product?.name}</h4> </li>\n                <li className=\"list-group-item\">  <Rating value={product?.rating}/> {`${product?.numReviews} reviews`}</li>\n                <li className=\"list-group-item\">   <p>Price: ${product?.price}</p> </li>\n                <li className=\"list-group-item\"> <p>Description: {product?.description}</p> </li>\n                </ul>\n                </div>\n                <div className=\"col-3\">\n                    <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item\"> Price: ${product?.price}</li>\n                    <li className=\"list-group-item\"> Status: {product?.countInStock > 0? \"In Stock\": \"Out of Stock\"}</li>\n                  {product?.countInStock > 0 && (\n                      <li className=\"list-group-item\">\n                          <div className=\"row\">\n                              <div className=\"col\">Qty</div>\n                              <div className=\"col\">\n                                  <form value = {qty} onChange={(e) =>  setQty(e.target.value)}>\n                              <select className=\"form-select\">\n                    {[...Array(product.countInStock).keys()].map(x => (\n                        <option key = {x + 1} value = {x + 1}> {x + 1}</option>\n                    ))}\n</select>\n\n</form>\n                              </div>\n                          </div>\n                      </li>\n                  )}\n                  \n         <button className=\"btn btn-dark\" \n                  onClick = {addToCartHandler}\n                  disabled = {product?.countInStock === 0}>Add to cart</button> \n                    </ul>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-6\"> \n                    <h3>Reviews</h3>\n                    {product?.reviews?.length === 0 && <div> <h5> No Reviews</h5></div>}\n              <div>\n                {product?.reviews?.map((review, index) => (\n                    <div   key={index}>\n                   <strong> {review?.name}</strong>\n                   <Rating value={review?.rating}></Rating>\n                    <p>{review?.createdAt.substring(0, 10)}</p>\n                    <p>Comment: {review?.comment}</p>\n                    </div>\n               \n                ))}\n                     </div>\n            <div>\n                  <h5>Write a Customer Review</h5>\n                  {successProductReview && (\n                    <h3>\n                      Review submitted successfully\n                    </h3>\n                  )}\n                  {loadingProductReview && <h3>Loading ...</h3> }\n                \n                  {userInfo ? (\n                    <form onSubmit={submitHandler}>\n                        <h6>Rating</h6>\n                        <select className=\"form-select my-3\"\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=''>Select...</option>\n                          <option value='1'>1 - Poor</option>\n                          <option value='2'>2 - Fair</option>\n                          <option value='3'>3 - Good</option>\n                          <option value='4'>4 - Very Good</option>\n                          <option value='5'>5 - Excellent</option>\n                        </select>\n       \n                      <div className='my-3'>\n                        <h6>Comment</h6>\n                        <textarea\n                          className =\"form-control\" \n                          placeholder=\"Leave a comment here\"\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></textarea>\n            \n                      <button\n                        disabled={loadingProductReview}\n                        type='submit'\n                        className = \"btn btn-dark my-3\"\n                      >\n                        Submit\n                      </button>\n                      </div>\n                    </form>\n                  ) : (\n                    <div>\n                      Please <NavLink to='/login'>sign in</NavLink> to write a review{' '}\n                    </div>\n                  )}\n                </div>\n           \n            </div>\n            </div>\n            \n         \n      \n\n        </div>\n        </div>\n    )\n}\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/redux/reducer/productReducer.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/redux/constants/constants.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/redux/actions/productAction.js",["184"],"import { PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DETAIL_FAIL, PRODUCT_DETAIL_REQUEST, PRODUCT_DETAIL_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS } from \"../constants/constants\"\nimport  axios from 'axios' \nimport { history } from \"../../utils/history/history\"\n\n\nexport const listProducts =  () => {\n    return async (dispatch) => {\n    try {\n        dispatch({type: PRODUCT_LIST_REQUEST})\n\n        const {data} = await axios.get('http://localhost:5000/api/products/')\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        }) \n\n    } catch(error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n    }\n}\n\nexport const getProductById =  (id) => {\n    return async (dispatch) => {\n    try {\n        dispatch({type: PRODUCT_DETAIL_REQUEST})\n\n        const {data} = await axios.get(`http://localhost:5000/api/products/${id}`)\n       \n        dispatch({\n            type: PRODUCT_DETAIL_SUCCESS,\n            payload: data\n        }) \n\n    } catch(error) {\n        dispatch({\n            type: PRODUCT_DETAIL_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n    }\n}\nexport const updateProductAdmin = (product) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: PRODUCT_UPDATE_REQUEST,\n      })\n  \n      const userInfo = JSON.parse(localStorage.getItem('userInfo'))\n    \n      const config = {\n          headers: {\n              'Content-Type' : 'application/json',\n              Authorization: `Bearer ${userInfo.token}`\n          }\n      }\n      \n      const { data } = await axios.put(\n        `http://localhost:5000/api/products/admin/edit/product/${product._id}`, product, config )\n  \n      dispatch({\n        type: PRODUCT_UPDATE_SUCCESS,\n        payload: data,\n      })\n      dispatch({ type: PRODUCT_DETAIL_SUCCESS, payload: data })\n    } catch (error) {\n        console.log(error);\n      }\n      dispatch({\n        type: PRODUCT_UPDATE_FAIL\n\n      })\n    }\n\n    export const deleteProduct  =  (id) => {\n        return async (dispatch, getState) => {\n         \n        try {\n            dispatch({type: PRODUCT_DELETE_REQUEST})\n    \n            const userInfo = JSON.parse(localStorage.getItem('userInfo'))\n        \n            const config = {\n                headers: {\n                    'Content-Type' : 'application/json',\n                    Authorization: `Bearer ${userInfo.token}`\n                }\n            }\n            const {data} = await axios.delete(`http://localhost:5000/api/products/${id}`, config)\n        \n            dispatch({\n                type: PRODUCT_DELETE_SUCCESS })\n                dispatch(listProducts())\n     } catch(error) {\n           console.log(error);\n           dispatch({\n               type: PRODUCT_DELETE_FAIL\n           })\n        }\n        }\n    }\n    export const createProduct = (product) => async (dispatch, getState) => {\n        try {\n          dispatch({\n            type: PRODUCT_CREATE_REQUEST,\n          })\n      \n          const {\n            userLogin: { userInfo },\n          } = getState()\n      \n          const config = {\n            headers: {\n              Authorization: `Bearer ${userInfo.token}`,\n            },\n          }\n      \n          const { data } = await axios.post(`http://localhost:5000/api/products`, product, config)\n          console.log(data);\n          dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n          })\n          history.push(\"/admin/products\")\n        } catch (error) {\n          \n          dispatch({\n            type: PRODUCT_CREATE_FAIL\n          })\n       \n        } }\n\n  export const createProductReview = (productId, review) => async (dispatch, getState) => {\n          try {\n            dispatch({\n              type: PRODUCT_CREATE_REVIEW_REQUEST,\n            })\n        \n            const {\n              userLogin: { userInfo },\n            } = getState()\n        \n            const config = {\n              headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n              },\n            }\n        \n            const { data } = await axios.post(`http://localhost:5000/api/products/${productId}/reviews`, review, config)\n            console.log(data);\n            dispatch({\n              type: PRODUCT_CREATE_REVIEW_SUCCESS\n            })\n            dispatch(getProductById(productId))\n          } catch (error) {\n            \n            dispatch({\n              type: PRODUCT_CREATE_REVIEW_FAIL\n            })\n         \n          } \n\n        }","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/redux/rootReducer.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/CartScreen.js",["185"],"import { width } from 'dom-helpers'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom'\nimport { addToCart, removeFromCart } from '../redux/actions/cartAction'\n\nexport default function CartScreen({match, location, history}) {\n    const dispatch = useDispatch()\n    const {cartItems} = useSelector(state => state.cart)\n    const productId = match.params.id\n\n    const qty = location.search? Number(location.search.split('=')[1]) : 1\n    \n    useEffect(() => {\n        if(productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n    const removeFromCartHandler = (id) => {\n       \n        dispatch(removeFromCart(id))\n    }\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n    return ( \n        <div className='container'>\n          <div className=\"row\">\n          <h1>Shopping Cart</h1>\n              <div className=\"col-8\">\n              \n                {cartItems.length  === 0 ? <h3>Your cart is empty <NavLink to = \"/\">Go back</NavLink></h3> : (\n                    <ul className=\"list-group list-group-flush\">\n                        {cartItems.map(item => {\n                   \n                            return   <li key={item.product} className=\"list-group-item\">\n                                <div className=\"row\">\n                                    <div className=\"col-2\">\n                                        <img src={item.image} alt={item.name}  style = {{width: '100px'}} className=\"fluid\" />\n                                    </div>\n                                    <div className=\"col-4\">\n                                        <NavLink to = {`/product/${item.product}`} className=\"text-dark text-decoration-none\"> <p>{item.name}</p></NavLink>\n                                    </div>\n                                    <div className=\"col-2\">{item.price}</div>\n                                    <div className=\"col-2\">\n                                    <form value = {item.qty} onChange={(e) => dispatch(addToCart(item.product,Number(e.target.value)))}>\n                              <select className=\"form-select\">\n                    {[...Array(item.countInStock).keys()].map(x => (\n                        <option key = {x + 1} value = {x + 1}> {x + 1}</option>\n                    ))}\n</select>\n\n</form>\n                                    </div>\n                                    <div className=\"col-2\">\n                  <button className=\"btn btn-light\" onClick = {() => {\n                      removeFromCartHandler(item.product)\n                  }}><i className=\"fas fa-trash\"></i></button>\n              </div>\n                                </div>\n                            </li>\n                        })}\n\n                 \n                  </ul>\n                )}\n              </div>\n              <div className=\"col-4\">\n              <ul className=\"list-group list-group-flush\">\n  <li className=\"list-group-item\">\n      <h5>Subtotal ({cartItems.reduce((acc, item) => acc + item.quantity, 0)}) items</h5>\n      ${cartItems.reduce((acc, item) => acc + item.quantity * item.price, 0)}\n  </li>\n <NavLink  className=\"list-group-item\" to = \"/shipping\"> \n        <button type = \"button\" className=\"btn-dark\" onClick = {checkoutHandler}> \n        Proceed To Checkout\n        </button>\n </NavLink>\n</ul>\n              </div>\n          </div>\n        </div>\n    )\n}\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/redux/reducer/cartReducer.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/redux/actions/cartAction.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/redux/reducer/userReducer.js",["186"],"import { USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DETAIL_FAIL, USER_DETAIL_REQUEST, USER_DETAIL_RESET, USER_DETAIL_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_RESET, USER_LIST_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_ADMIN_FAIL, USER_UPDATE_ADMIN_REQUEST, USER_UPDATE_ADMIN_RESET, USER_UPDATE_ADMIN_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_RESET, USER_UPDATE_SUCCESS } from \"../constants/constants\"\n\n\n\nexport const userReducer = (state = {}, action) => {\nswitch(action.type) {\n    case USER_LOGIN_REQUEST: \n        return {loading: true }\n    case USER_LOGIN_SUCCESS: \n        return {loading: false, userInfo: action.payload}\n    case USER_LOGIN_FAIL: \n        return {loading: false, error: action.payload}\n\n    case USER_REGISTER_REQUEST: \n        return {loading: true }\n    case USER_REGISTER_SUCCESS: \n        return {loading: false, userInfo: action.payload}\n    case USER_REGISTER_FAIL: \n        return {loading: false, error: action.payload}\n    case USER_LOGOUT: \n    return {}\n\n    default:\n    return state\n}\n\n}\n\nexport const userDetailReducer = (state = {user: {}}, action) => {\n    switch(action.type) {\n        case USER_DETAIL_REQUEST: \n        return {loading: true }\n        case USER_DETAIL_SUCCESS:       \n        return {loading: false, user: action.payload}\n        case USER_DETAIL_FAIL: \n        return {loading: false, error: action.payload}\n        case USER_DETAIL_RESET: \n        return {user: {}}\n        default:\n        return state\n    }\n    }\n\n    export const userUpdateReducer = (state = {}, action) => {\n        switch(action.type) {\n            case USER_UPDATE_REQUEST: \n            return {loading: true }\n            case USER_UPDATE_SUCCESS: \n            return {loading: false, success: true,  userInfo: action.payload}\n            case USER_UPDATE_FAIL: \n            return {loading: false, success: false, error: action.payload}\n \n            default:\n            return state\n        }\n        }\n        export const userListReducer = (state = {users: []}, action) => {\n            switch(action.type) {\n                case USER_LIST_REQUEST: \n                return {loading: true }\n                case USER_LIST_SUCCESS: \n                return {loading: false, success: true,  users: action.payload}\n                case USER_LIST_FAIL: \n                return {loading: false, success: false, error: action.payload}\n                case USER_LIST_RESET: \n                return {users: []}\n                default:\n                return state\n            }\n}\n\nexport const userDeleteReducer = (state = {}, action) => {\n    switch(action.type) {\n        case USER_DELETE_REQUEST: \n        return {loading: true }\n        case USER_DELETE_SUCCESS: \n        return {loading: false, success: true}\n        case USER_DELETE_FAIL: \n        return {loading: false, success: false, error: action.payload}\n        default:\n        return state\n    }\n}\n\nexport const userUpdateAdminReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n      case USER_UPDATE_ADMIN_REQUEST:\n        return { loading: true }\n      case USER_UPDATE_ADMIN_SUCCESS:\n        return { loading: false, success: true }\n      case USER_UPDATE_ADMIN_FAIL:\n        return { loading: false, error: action.payload }\n      case USER_UPDATE_ADMIN_RESET:\n        return {\n          user: {},\n        }\n      default:\n        return state\n    }\n  }\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/LoginScreen.js",["187","188"],"import React, { useEffect, useState } from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {login} from '../redux/actions/userAction'\nexport default function LoginScreen({location, history}) {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const dispatch = useDispatch()\n    const {loading, error, userInfo} = useSelector(state => state.userLogin)\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n    useEffect(() => {\n        if(userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect]);\n    return (\n        <div className='container'>\n            <h3>Sign in</h3>\n         <form onSubmit = {handleSubmit}>\n  <div className=\"mb-3\">\n    <label className=\"form-label\">Email address</label>\n    <input type=\"email\" className=\"form-control\" name = \"email\" onChange={(e) => setEmail(e.target.value)}  value = {email}/>\n    <div className=\"form-text\">We'll never share your email with anyone else.</div>\n  </div>\n  <div className=\"mb-3\">\n    <label className=\"form-label\">Password</label>\n    <input type=\"password\" className=\"form-control\" name = \"password\" onChange={(e) => setPassword(e.target.value)} value = {password} />\n  </div>\n\n  <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n</form>\n        <div className=\"row\"></div>\n        </div>\n    )\n}\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/redux/actions/userAction.js",["189"],"import  axios from 'axios' \nimport { history } from '../../utils/history/history'\nimport { ORDER_LIST_MY_RESET, USER_DETAIL_FAIL, USER_DETAIL_REQUEST, USER_DETAIL_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_DETAIL_RESET, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL,\n    USER_UPDATE_ADMIN_REQUEST, USER_UPDATE_ADMIN_SUCCESS,  USER_UPDATE_ADMIN_FAIL} from '../constants/constants'\n\n\n\nexport const login  =  (email, password) => {\n    return async (dispatch, getState) => {\n    try {\n        dispatch({type: USER_LOGIN_REQUEST})\n        \n        const {data} = await axios.post('http://localhost:5000/api/users/login', {email, password})\n        console.log(data);\n        \n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch(error) {\n       console.log(error);\n    }\n    }\n}\n\nexport const logout  =  (email, password) => {\n    return async (dispatch, getState) => {\n  localStorage.removeItem('userInfo')\n  dispatch({type: USER_LOGOUT})\n  dispatch({type: USER_DETAIL_RESET})\n  dispatch({type: ORDER_LIST_MY_RESET})\n  dispatch({type: USER_LIST_RESET})\n  history.push('/login')\n    }\n}\n\nexport const register  =  (name, email, password) => {\n    return async (dispatch, getState) => {\n    try {\n        dispatch({type: USER_REGISTER_REQUEST})\n       \n        const {data} = await axios.post('http://localhost:5000/api/users/register', {name, email, password})\n        console.log(data);\n        \n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch(error) {\n       console.log(error);\n       dispatch({\n           type: USER_REGISTER_FAIL\n       })\n    }\n    }\n}\n\n\nexport const getUserDetails  =  (id) => {\n    return async (dispatch, getState) => {\n    try {\n        dispatch({type: USER_DETAIL_REQUEST})\n\n        const userInfo = JSON.parse(localStorage.getItem('userInfo'))\n        console.log('userInfo', userInfo);\n        \n        const config = {\n            headers: {\n                'Content-Type' : 'application/json',\n                Authorization: `Bearer ${id.token}`\n            }\n        }\n        const {data} = await axios.get(`http://localhost:5000/api/users/${id}`, config)\n        console.log(\"data\", data);\n        \n        dispatch({\n            type: USER_DETAIL_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n       console.log(error);\n       dispatch({\n           type: USER_DETAIL_FAIL\n       })\n    }\n    }\n}\n\nexport const updateUserProfileFrontEnd  =  (user) => {\n    return async (dispatch, getState) => {\n     \n    try {\n        dispatch({type: USER_UPDATE_REQUEST})\n\n        const userInfo = JSON.parse(localStorage.getItem('userInfo'))\n    \n        const config = {\n            headers: {\n                'Content-Type' : 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const {data} = await axios.put(`http://localhost:5000/api/users/profile/${userInfo._id}`, user, config)\n    \n        localStorage.setItem('userInfo', JSON.stringify(data))\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n       console.log(error);\n       dispatch({\n           type: USER_UPDATE_FAIL\n       })\n    }\n    }\n}\n\nexport const getUserList  =  () => {\n    return async (dispatch, getState) => {\n     \n    try {\n        dispatch({type: USER_LIST_REQUEST})\n\n        const userInfo = JSON.parse(localStorage.getItem('userInfo'))\n    \n        const config = {\n            headers: {\n                'Content-Type' : 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const {data} = await axios.get('http://localhost:5000/api/users', config)\n    \n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n       console.log(error);\n       dispatch({\n           type: USER_LIST_FAIL\n       })\n    }\n    }\n}\n\nexport const deleteUser  =  (id) => {\n    return async (dispatch, getState) => {\n     \n    try {\n        dispatch({type: USER_DELETE_REQUEST})\n\n        const userInfo = JSON.parse(localStorage.getItem('userInfo'))\n    \n        const config = {\n            headers: {\n                'Content-Type' : 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const {data} = await axios.delete(`http://localhost:5000/api/users/${id}`, config)\n    \n        dispatch({\n            type: USER_DELETE_SUCCESS })\n } catch(error) {\n       console.log(error);\n       dispatch({\n           type: USER_DELETE_FAIL\n       })\n    }\n    }\n}\n\n\nexport const updateUserProfileAdmin  =  (userUpdated) => {\n    return async (dispatch, getState) => {\n     \n    try {\n        dispatch({type: USER_UPDATE_ADMIN_REQUEST})\n\n        const userInfo = JSON.parse(localStorage.getItem('userInfo'))\n    \n        const config = {\n            headers: {\n                'Content-Type' : 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const {data} = await axios.put(`http://localhost:5000/api/users/admin/user/${userUpdated._id}`, userUpdated, config)\n    \n        localStorage.setItem('userInfo', JSON.stringify(data))\n        dispatch({\n            type: USER_UPDATE_ADMIN_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n       console.log(error);\n       dispatch({\n           type: USER_UPDATE_ADMIN_FAIL\n       })\n    }\n    }\n}\n\n\n\n\n\n\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/RegisterScreen.js",["190","191","192"],"import React, { useEffect, useState } from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {login, register} from '../redux/actions/userAction'\nexport default function RegisterScreen({location, history}) {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [name, setName] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [message, setMessage] = useState('');\n   \n    const dispatch = useDispatch()\n    const {loading, error, userInfo} = useSelector(state => state.userLogin)\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if(password !== confirmPassword) {\n            setMessage('Password do not match')\n            return;\n        }\n        dispatch(register(name, email, password))\n    }\n    useEffect(() => {\n        if(userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect]);\n    return (\n        <div className='container'>\n            <h3>Register</h3>\n         <form onSubmit = {handleSubmit}>\n\n         <div className=\"mb-3\">\n    <label className=\"form-label\">Your Name</label>\n    <input type=\"text\" className=\"form-control\" name = \"name\" onChange={(e) => setName(e.target.value)}  value = {name}/>\n\n  </div>\n\n  <div className=\"mb-3\">\n    <label className=\"form-label\">Email address</label>\n    <input type=\"email\" className=\"form-control\" name = \"email\" onChange={(e) => setEmail(e.target.value)}  value = {email}/>\n    <div className=\"form-text\">We'll never share your email with anyone else.</div>\n  </div>\n  <div className=\"mb-3\">\n    <label className=\"form-label\">Password</label>\n    <input type=\"password\" className=\"form-control\" name = \"password\" onChange={(e) => setPassword(e.target.value)} value = {password} />\n  </div>\n\n  <div className=\"mb-3\">\n    <label className=\"form-label\">Confirm Password</label>\n    <input type=\"password\" className=\"form-control\" name = \"confirmPassword\" onChange={(e) => setConfirmPassword(e.target.value)} value = {confirmPassword} />\n  <div className=\"text-danger\">{message}</div>\n  </div>\n\n  <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n</form>\n        <div className=\"row\"></div>\n        </div>\n    )\n}\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/ProfileScreen.js",["193","194","195","196","197","198","199"],"import React, { useEffect, useState } from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport { Redirect } from 'react-router-dom';\nimport { listMyOrders } from '../redux/actions/orderAction';\nimport { NavLink } from 'react-router-dom';\nimport {getUserDetails, login, register, updateUserProfileFrontEnd} from '../redux/actions/userAction'\nexport default function ProfileScreen({location, history}) {\n    const dispatch = useDispatch()\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [name, setName] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [message, setMessage] = useState('');\n    // const {userInfo} = useSelector(state => state.userLogin)\n    const userInfo = JSON.parse( localStorage.getItem('userInfo'))\n    const {success} = useSelector(state => state.userUpdateProfile)\n    const {orders} = useSelector(state => state.orderListMy)\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        // if(password !== confirmPassword) {\n        //     setMessage('Password do not match')\n        //     return;\n        // }\n\n        dispatch(updateUserProfileFrontEnd({id: userInfo._id, name, email, password}))\n    }\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n          } else {\n            setEmail(userInfo.email)\n            setName(userInfo.name)\n            dispatch(listMyOrders())\n          }\n\n               \n    }, []);\n\n \n\n \n    return (\n        <div className='container'>\n            <h3>Update Profile</h3>\n     \n        <div className=\"row\">\n          <div className=\"col-3\">\n          <form onSubmit = {submitHandler}>\n\n<div className=\"mb-3\">\n<label className=\"form-label\">Your Name</label>\n<input type=\"text\" className=\"form-control\" name = \"name\" onChange={(e) => setName(e.target.value)\n}  value = {name}/>\n\n</div>\n\n<div className=\"mb-3\">\n<label className=\"form-label\">Email address</label>\n<input type=\"email\" className=\"form-control\" name = \"email\" onChange={(e) => setEmail(e.target.value)}  value = {email}/>\n<div className=\"form-text\">We'll never share your email with anyone else.</div>\n</div>\n<div className=\"mb-3\">\n<label className=\"form-label\">Password</label>\n<input type=\"password\" className=\"form-control\" name = \"password\" onChange={(e) => setPassword(e.target.value)} value = {password} />\n</div>\n\n<div className=\"mb-3\">\n<label className=\"form-label\">Confirm Password</label>\n<input type=\"password\" className=\"form-control\" name = \"confirmPassword\" onChange={(e) => setConfirmPassword(e.target.value)} value = {confirmPassword} />\n<div className=\"text-danger\">{message}</div>\n</div>\n\n<button type=\"submit\" className=\"btn btn-primary\">Update</button>\n</form>\n          </div>\n          <div className=\"col-9\">\n              <h3>My Orders </h3>\n              <table className=\"table\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">ID</th>\n                    <th scope=\"col\">DATE</th>\n                    <th scope=\"col\">TOTAL</th>\n                    <th scope=\"col\">PAID</th>\n                    <th scope=\"col\">DELIVERED</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                {orders?.map((item, index) => {\n                    return  <tr key = {index}>\n                      <td>{item._id}</td>\n                  <td>{item.createdAt.substring(0, 10)}</td>\n                  <td>{item.totalPrice}</td>\n                  <td>\n                    {item.isPaid ? (\n                      item.paidAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {item.isDelivered ? (\n                      item.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <NavLink to={`/order/${item._id}`}>\n                      <button className='btn btn-light'>\n                        Details\n                      </button>\n                    </NavLink>\n                  </td>\n                    </tr>\n                   \n                    })}\n                 \n                </tbody>\n              </table>\n          </div>\n        </div>\n        </div>\n    )\n}\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/ShippingScreen.js",["200"],"import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { saveShippingAddress } from '../redux/actions/cartAction';\nimport { history } from '../utils/history/history';\n\nexport default function ShippingScreen() {\n    const {shippingAddress} = useSelector(state => state.cart)\n    const [address, setAddress] = useState('');\n    const [city, setCity] = useState('');\n    const [postalCode, setPostalCode] = useState('');\n    const [country, setCountry] = useState('');\n\n    const dispatch = useDispatch()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n      \n\n        dispatch(saveShippingAddress({address, city, postalCode, country}))\n\n        history.push('/payment')\n    }\n  return <div className='container'>\n         <CheckoutSteps step1 step2 />\n\n      <h1>SHIPPING</h1>\n\n      <form className=\"form-control\" onSubmit = {submitHandler}>\n      <div className=\"mb-3\">\n    <label className=\"form-label\">Address</label>\n    <input type=\"text\" className=\"form-control\" name = \"address\" onChange={(e) => setAddress(e.target.value)\n    }  value = {address} />\n\n  </div>\n  <div className=\"mb-3\">\n    <label className=\"form-label\">City</label>\n    <input type=\"text\" className=\"form-control\" name = \"city\" onChange={(e) => setCity(e.target.value)\n    }  value = {city} />\n  </div>\n\n  <div className=\"mb-3\">\n    <label className=\"form-label\">Postal Code</label>\n    <input type=\"text\" className=\"form-control\" name = \"postalCode\" onChange={(e) => setPostalCode(e.target.value)\n    }  value = {postalCode} />\n  </div>\n\n  <div className=\"mb-3\">\n    <label className=\"form-label\">Country</label>\n    <input type=\"text\" className=\"form-control\" name = \"country\" onChange={(e) => setCountry(e.target.value)\n    }  value = {country} />\n  </div>\n  <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n      </form>\n  </div>;\n}\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/components/CheckoutSteps.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/PaymentScreen.js",["201"],"import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { savePaymentMethod, saveShippingAddress } from '../redux/actions/cartAction';\nimport { history } from '../utils/history/history';\n\nexport default function PaymentScreen() {\n    const {shippingAddress} = useSelector(state => state.cart)\n    const dispatch = useDispatch()\n\n    console.log('shippingAddress' , shippingAddress);\n\n    if(!shippingAddress) {\n        history.push('/shipping')\n    }\n    const [paymentMethod, setPaymentMethod] = useState('Paypal'); \n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('placeorder')\n\n    }\n  return <div className='container'>\n         <CheckoutSteps step1 step2 step3 />\n\n      <h1>Payment Method</h1>\n\n      <form className=\"form-control\" onSubmit = {submitHandler}>\n    <div className=\"input-group\">\n  <div className=\"input-group-prepend mx-3\">\n    <div className=\"input-group-text\">\n      <input name = \"paymentMethod\" type=\"radio\" onChange={(e) => setPaymentMethod(e.target.value)} \n      value=\"Paypal\" checked/>\n    </div>\n  </div>\n  <p>Paypal or Credit Card</p>\n</div>\n\n\n  <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n      </form>\n  </div>;\n}\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/PlaceOrderScreen.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/redux/reducer/orderReducer.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/redux/actions/orderAction.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/OrderScreen.js",["202","203","204","205","206"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { createOrder, deliverOrder, getOrderDetail, payOrder } from '../redux/actions/orderAction';\nimport { history } from '../utils/history/history';\nimport axios from 'axios'; \nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport { ORDER_PAY_RESET } from '../redux/constants/constants';\n\nexport default function OrderScreen({match}) {\n    \n    const dispatch = useDispatch()\n    const orderId = match.params.id\n    const orderDetail = useSelector(state => state.orderDetail)\n\n    const orderDeliver = useSelector((state) => state.orderDeliver)\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n    const [sdkReady, setSdkReady] = useState(false);\n    const {order, loading } = orderDetail;\n  console.log('order', order);\n    const orderPay = useSelector(state => state.orderPay)\n\n    \n    const {loading:loadingPay, success:successPay } = orderPay;\n\n    const deliverHandler = () => {\n      dispatch(deliverOrder(order))\n    }\n  \n\n    useEffect(() => {\n      if (!userInfo) {\n        history.push('/login')\n      }\n\n        const addPayPalScript = async () => {\n            const {data: clientId} = await axios.get('http://localhost:5000/api/config/paypal')\n            console.log(clientId);\n            const script = document.createElement('script')\n            script.type = \"text/javascript\"\n            script.async = true \n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n            script.onload = () => {\n                setSdkReady(true)\n            }\n            document.body.appendChild(script)\n        }\n        if(!order || successPay) {\n            dispatch({type: ORDER_PAY_RESET})\n            dispatch(getOrderDetail(orderId))\n        } else if(!order.isPaid) {\n            if(!window.paypal){\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n      \n    }, [dispatch, orderId, successPay, order]);\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId,paymentResult ))\n    }\n    \n\n  return <div className=\"container\">\n      <CheckoutSteps step1 step2 step3 step4/>\n      OrderScreen\n      <h1>Order {order?._id}</h1>\n      <div className=\"row\">\n          <div className=\"col-8\">\n              <ul className=\"list-group\">\n                  <li className=\"list-group-item\">\n                      <h4>Shipping</h4>\n                      <p>\n                          <strong>Name : </strong> {order?.user?.name}\n                      </p>\n                      <p> \n                          <strong>Email: </strong> {' '} \n                        <a href={`mailto: ${order?.user?.email}`}>{order?.user?.email}</a>\n                      </p>\n                      <p>\n                <strong>Address:</strong>\n                {order?.shippingAddress.address}, {order?.shippingAddress.city}{' '}\n                {order?.shippingAddress.postalCode},{' '}\n                {order?.shippingAddress.country}\n              </p>\n              {order?.isDelivered ? (\n                <div  className = \"text-danger\">\n                  Delivered on {order?.deliveredAt}\n                </div>\n              ) : (\n                <div className = \"text-danger\">Not Delivered</div>\n              )}\n\n\n                  </li>\n                  <li className=\"list-group-item\">\n                  <h4>Payment Method</h4>\n              <p>\n                <strong>Method: </strong>\n                {order?.paymentMethod}\n              </p> \n              {order?.isPaid ? (\n                <div className = \"text-danger\">Paid on {order.paidAt}</div>\n              ) : (\n                <div className = \"text-danger\">Not Paid</div>\n              )}\n\n                  </li>\n                  <li className=\"list-group-item\">\n                  <h4>Order Items</h4>\n                  {order?.orderItems.length === 0 ? (\n                <h2>Order is empty</h2>\n              ) : (\n                <ul className=\"list-group\">\n                  {order?.orderItems.map((item, index) => (\n                    <li className=\"list-group-item\" key={index}>\n                      <div className=\"row\">\n                        <div className=\"col\">\n                          <img\n                            style={{width: \"50px\", height: \"50px\"}}\n                            src=  {item?.image}\n                            alt={item?.name}\n                          />\n                        </div>\n                        <div className=\"col\">\n                          <NavLink to={`/product/${item?.product}`} className=\"text-dark text-decoration-none\">\n                            {item?.name}\n                          </NavLink>\n                        </div>\n                        <div className=\"col-4\">\n                          {item?.quantity} x ${item?.price} = ${item?.quantity * item?.price}\n                        </div>\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              )}\n                  </li>\n              </ul>\n          </div>\n          <div className=\"col-4\">\n          <div className= \"card\">\n            <ul>\n              <li>\n                <h2>Order Summary</h2>\n              </li>\n              <li>\n                <div className = \"row\">\n                  <div className = \"col\">Items</div>\n                  <div className = \"col\">${order?.itemsPrice}</div>\n                </div>\n              </li>\n              <li>\n                <div className = \"row\">\n                  <div className = \"col\">Shipping</div>\n                  <div className = \"col\">${order?.shippingPrice}</div>\n                </div>\n              </li>\n              <li>\n                <div className = \"row\">\n                  <div className = \"col\">Tax</div>\n                  <div className = \"col\">${order?.taxPrice}</div>\n                </div>\n              </li>\n              <li>\n                <div className = \"row\">\n                  <div className = \"col\">Total</div>\n                  <div className = \"col\">${order?.totalPrice}</div>\n                </div>\n              </li>\n              {!order?.isPaid && (\n                  <li>\n                      {loadingPay && <h1>Loading ...</h1>}\n                      {loadingPay ? <h1>Loading ...</h1> : (\n                          <PayPalButton amount={order?.totalPrice} onSuccess={successPaymentHandler}/>\n                      ) }\n                  </li>\n              )}\n\n{loadingDeliver && <h3>Loading ...</h3> }\n              {userInfo &&\n                userInfo?.isAdmin &&\n                order?.isPaid &&\n                !order?.isDelivered && (\n                  <li>\n                    <button\n                      type='button'\n                      className='btn btn-dark'\n                      onClick={deliverHandler} >\n                      Mark As Delivered\n                    </button>\n                  </li>\n                )}\n\n            </ul>\n          </div>\n        </div>\n\n      </div>\n  </div>;\n}\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/UserScreen.js",["207"],"\nimport React, { lazy, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { deleteUser, getUserList } from '../redux/actions/userAction';\nimport { history } from '../utils/history/history';\n\nexport default function UserScreen() {\n    const dispatch = useDispatch()\n    const {loading, users} = useSelector(state => state.userList)\n    const {userInfo} = useSelector(state => state.userLogin)\n\n    const deleteHandler = (id) => {\n        dispatch(deleteUser(id))\n    }\n    useEffect(() => {\n        if(userInfo && userInfo.isAdmin) {\n            dispatch(getUserList())\n        } else {\n            history.push(\"/login\")\n        }\n        // dispatch(getUserList())\n    }, [dispatch, userInfo]);\n\n  return <div className='container'>\n      \n      <h1>Users</h1> \n      {loading ? <h3>Loading</h3> : (\n          <table className=\"table\">\n              <thead>\n                  <tr>\n                      <th>ID</th>\n                      <th>NAME</th>\n                      <th>EMAIL</th>\n                      <th>ADMIN</th>\n                      <th></th>\n                  </tr>\n              </thead>\n              <tbody>\n                  {users.map((user, index) => {\n                         return <tr key={index}>\n                          <td>{user._id}</td>\n                          <td>{user.name}</td>\n                          <td>\n                            <a href={`mailto:${user.email}`}>{user.email}</a>\n                          </td>\n                          <td>\n                            {user.isAdmin ? (\n                              <i className='fas fa-check' style={{ color: 'green' }}></i>\n                            ) : (\n                              <i className='fas fa-times' style={{ color: 'red' }}></i>\n                            )}\n                          </td>\n                          <td>\n                            <NavLink to={`/admin/edit/user/${user._id}`}>\n                              <button className='btn-light'>\n                                <i className='fas fa-edit'></i>\n                              </button>\n                            </NavLink>\n                            <button\n                   \n                              className='btn-danger'\n                              onClick={() => deleteHandler(user._id)}\n                            >\n                              <i className='fas fa-trash'></i>\n                            </button>\n                          </td>\n                        </tr>\n                  })}\n              </tbody>\n          </table>\n      )}\n      </div>;\n}\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/UserEditScreen.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/ProductListScreen.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/ProductEditScreen.js",["208"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { getProductById, updateProductAdmin } from '../redux/actions/productAction';\nimport { PRODUCT_UPDATE_RESET } from '../redux/constants/constants';\nimport { history } from '../utils/history/history';\nexport default function ProductEditScreen({ match }) {\n    const productId = match?.params?.id\n\n    const [name, setName] = useState('')\n    const [category, setCategory] = useState('')\n    const [description, setDescription] = useState('')\n    const [price, setPrice] = useState('')\n    const [countInStock, setCountInStock] = useState('')\n    const [brand, setBrand] = useState('')\n    const dispatch = useDispatch()\n\n    const  { loading, product } = useSelector((state) => state?.productReducer)\n    //const  { loading: loadingUpdate, success: successUpdate } = useSelector((state) => state?.userUpdateAdmin)\n    const productUpdate = useSelector((state) => state.productUpdate)\n    const { loading: loadingUpdate,  success: successUpdate, } = productUpdate\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch({ type: PRODUCT_UPDATE_RESET })\n            history.push('/admin/products')\n          } else {\n           if( !product) {\n               dispatch(getProductById(productId))\n           } else {\n               setName(product?.name)\n               setCategory(product?.category)\n               setDescription(product?.description)\n               setPrice(product?.price)\n               setCountInStock(product?.countInStock)\n               setBrand(product?.brand)\n           }\n        }},[productId, product, dispatch , successUpdate]);\n  \n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        const updateProduct = {_id: productId,  name, category, description, price, countInStock, brand}\n        console.log('updateProduct', updateProduct);\n        dispatch(updateProductAdmin(updateProduct))\n      }\n\n  return <div>\n<NavLink to='/admin/products' className='btn btn-light my-3'>\n        Go Back\n      </NavLink>\n      <div className = \"container\">\n        <h1>Edit Product</h1>\n        {loading ? (\n         <h1>Loading ...</h1>\n        ) : (\n            <form onSubmit = {submitHandler}>\n            <div className=\"mb-3\">\n            <label className=\"form-label\">Product Name</label>\n            <input type=\"text\" className=\"form-control\" name = \"name\" onChange={(e) => setName(e.target.value)\n            }  value = {name}/>\n            </div>\n            \n            <div className=\"mb-3\">\n            <label className=\"form-label\">Category</label>\n            <input type=\"text\" className=\"form-control\" name = \"category\" onChange={(e) => setCategory(e.target.value)}  value = {category}/>\n            </div>\n            <div className=\"mb-3\">\n            <label className=\"form-label\">Description</label>\n            <input type=\"text\" className=\"form-control\" name = \"description\" onChange={(e) => setDescription(e.target.value)}  value = {description}/>\n            </div>\n            <div className=\"mb-3\">\n            <label className=\"form-label\">Brand</label>\n            <input type=\"text\" className=\"form-control\" name = \"brand\" onChange={(e) => setBrand(e.target.value)}  value = {brand}/>\n            </div>\n            <div className=\"mb-3\">\n            <label className=\"form-label\">Price</label>\n            <input type=\"number\" className=\"form-control\" name = \"price\" onChange={(e) => setPrice(e.target.value)}  value = {price}/>\n            </div>\n            <div className=\"mb-3\">\n            <label className=\"form-label\">Stock</label>\n            <input type=\"number\" className=\"form-control\" name = \"countInStock\" onChange={(e) => setCountInStock(e.target.value)}  value = {countInStock}/>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Update</button>\n            </form>\n        )}\n      </div>\n\n  </div>;\n}\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/ProductCreateScreen.js",["209"],"import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { createProduct } from '../redux/actions/productAction';\n\nexport default function ProductCreateScreen() {\n\n    const  { loading, product } = useSelector((state) => state?.productCreate)\n  \n    const [name, setName] = useState('')\n    const [category, setCategory] = useState('')\n    const [description, setDescription] = useState('')\n    const [price, setPrice] = useState('')\n    const [countInStock, setCountInStock] = useState('')\n    const [brand, setBrand] = useState('')\n    const [image, setImage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        const productCreated = {name, category, description, price, countInStock, brand, image }\n        console.log('productCreated',productCreated);\n        dispatch(createProduct(productCreated))\n    }\n  return <div>\n      <NavLink to='/admin/products' className='btn btn-light my-3'>\n        Go Back\n      </NavLink>\n      <div className = \"container\">\n        <h1>Create  Product</h1>\n        {loading ? (\n         <h1>Loading ...</h1>\n        ) : (\n            <form onSubmit = {submitHandler}>\n            <div className=\"mb-3\">\n            <label className=\"form-label\">Product Name</label>\n            <input type=\"text\" className=\"form-control\" name = \"name\" onChange={(e) => setName(e.target.value)\n            }  value = {name}/>\n            </div>\n            \n            <div className=\"mb-3\">\n            <label className=\"form-label\">Category</label>\n            <input type=\"text\" className=\"form-control\" name = \"category\" onChange={(e) => setCategory(e.target.value)}  value = {category}/>\n            </div>\n            <div className=\"mb-3\">\n            <label className=\"form-label\">Description</label>\n            <input type=\"text\" className=\"form-control\" name = \"description\" onChange={(e) => setDescription(e.target.value)}  value = {description}/>\n            </div>\n            <div className=\"mb-3\">\n            <label className=\"form-label\">Brand</label>\n            <input type=\"text\" className=\"form-control\" name = \"brand\" onChange={(e) => setBrand(e.target.value)}  value = {brand}/>\n            </div>\n            <div className=\"mb-3\">\n            <label className=\"form-label\">Price</label>\n            <input type=\"number\" className=\"form-control\" name = \"price\" onChange={(e) => setPrice(e.target.value)}  value = {price}/>\n            </div>\n            <div className=\"mb-3\">\n            <label className=\"form-label\">Image</label>\n            <input type=\"text\" className=\"form-control\" name = \"image\" onChange={(e) => setImage(e.target.value)}  value = {image}/>\n            </div>\n            <div className=\"mb-3\">\n            <label className=\"form-label\">Stock</label>\n            <input type=\"number\" className=\"form-control\" name = \"countInStock\" onChange={(e) => setCountInStock(e.target.value)}  value = {countInStock}/>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Create</button>\n            </form>\n        )}\n      </div>\n  </div>;\n}\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/OrderListScreen.js",[],{"ruleId":"210","severity":1,"message":"211","line":7,"column":10,"nodeType":"212","messageId":"213","endLine":7,"endColumn":21},{"ruleId":"210","severity":1,"message":"214","line":9,"column":8,"nodeType":"212","messageId":"213","endLine":9,"endColumn":14},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"210","severity":1,"message":"219","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":13},{"ruleId":"210","severity":1,"message":"220","line":8,"column":11,"nodeType":"212","messageId":"213","endLine":8,"endColumn":18},{"ruleId":"210","severity":1,"message":"221","line":8,"column":20,"nodeType":"212","messageId":"213","endLine":8,"endColumn":25},{"ruleId":"210","severity":1,"message":"222","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":13},{"ruleId":"210","severity":1,"message":"223","line":2,"column":15,"nodeType":"212","messageId":"213","endLine":2,"endColumn":24},{"ruleId":"210","severity":1,"message":"224","line":2,"column":26,"nodeType":"212","messageId":"213","endLine":2,"endColumn":29},{"ruleId":"210","severity":1,"message":"225","line":1,"column":28,"nodeType":"212","messageId":"213","endLine":1,"endColumn":36},{"ruleId":"210","severity":1,"message":"226","line":3,"column":8,"nodeType":"212","messageId":"213","endLine":3,"endColumn":16},{"ruleId":"210","severity":1,"message":"227","line":4,"column":8,"nodeType":"212","messageId":"213","endLine":4,"endColumn":13},{"ruleId":"210","severity":1,"message":"221","line":10,"column":31,"nodeType":"212","messageId":"213","endLine":10,"endColumn":36},{"ruleId":"228","severity":1,"message":"229","line":14,"column":8,"nodeType":"230","endLine":14,"endColumn":10,"suggestions":"231"},{"ruleId":"210","severity":1,"message":"227","line":4,"column":8,"nodeType":"212","messageId":"213","endLine":4,"endColumn":13},{"ruleId":"210","severity":1,"message":"220","line":14,"column":21,"nodeType":"212","messageId":"213","endLine":14,"endColumn":28},{"ruleId":"210","severity":1,"message":"221","line":14,"column":30,"nodeType":"212","messageId":"213","endLine":14,"endColumn":35},{"ruleId":"210","severity":1,"message":"232","line":20,"column":12,"nodeType":"212","messageId":"213","endLine":20,"endColumn":30},{"ruleId":"210","severity":1,"message":"233","line":92,"column":20,"nodeType":"212","messageId":"213","endLine":92,"endColumn":24},{"ruleId":"210","severity":1,"message":"234","line":1,"column":10,"nodeType":"212","messageId":"213","endLine":1,"endColumn":15},{"ruleId":"210","severity":1,"message":"235","line":1,"column":498,"nodeType":"212","messageId":"213","endLine":1,"endColumn":515},{"ruleId":"210","severity":1,"message":"220","line":8,"column":12,"nodeType":"212","messageId":"213","endLine":8,"endColumn":19},{"ruleId":"210","severity":1,"message":"221","line":8,"column":21,"nodeType":"212","messageId":"213","endLine":8,"endColumn":26},{"ruleId":"210","severity":1,"message":"233","line":173,"column":16,"nodeType":"212","messageId":"213","endLine":173,"endColumn":20},{"ruleId":"210","severity":1,"message":"236","line":3,"column":9,"nodeType":"212","messageId":"213","endLine":3,"endColumn":14},{"ruleId":"210","severity":1,"message":"220","line":12,"column":12,"nodeType":"212","messageId":"213","endLine":12,"endColumn":19},{"ruleId":"210","severity":1,"message":"221","line":12,"column":21,"nodeType":"212","messageId":"213","endLine":12,"endColumn":26},{"ruleId":"210","severity":1,"message":"237","line":3,"column":10,"nodeType":"212","messageId":"213","endLine":3,"endColumn":18},{"ruleId":"210","severity":1,"message":"238","line":6,"column":9,"nodeType":"212","messageId":"213","endLine":6,"endColumn":23},{"ruleId":"210","severity":1,"message":"236","line":6,"column":25,"nodeType":"212","messageId":"213","endLine":6,"endColumn":30},{"ruleId":"210","severity":1,"message":"239","line":6,"column":32,"nodeType":"212","messageId":"213","endLine":6,"endColumn":40},{"ruleId":"210","severity":1,"message":"240","line":14,"column":21,"nodeType":"212","messageId":"213","endLine":14,"endColumn":31},{"ruleId":"210","severity":1,"message":"241","line":17,"column":12,"nodeType":"212","messageId":"213","endLine":17,"endColumn":19},{"ruleId":"228","severity":1,"message":"242","line":41,"column":8,"nodeType":"230","endLine":41,"endColumn":10,"suggestions":"243"},{"ruleId":"210","severity":1,"message":"244","line":8,"column":12,"nodeType":"212","messageId":"213","endLine":8,"endColumn":27},{"ruleId":"210","severity":1,"message":"245","line":4,"column":29,"nodeType":"212","messageId":"213","endLine":4,"endColumn":48},{"ruleId":"210","severity":1,"message":"246","line":5,"column":10,"nodeType":"212","messageId":"213","endLine":5,"endColumn":21},{"ruleId":"210","severity":1,"message":"247","line":18,"column":45,"nodeType":"212","messageId":"213","endLine":18,"endColumn":59},{"ruleId":"210","severity":1,"message":"248","line":23,"column":12,"nodeType":"212","messageId":"213","endLine":23,"endColumn":20},{"ruleId":"210","severity":1,"message":"220","line":24,"column":19,"nodeType":"212","messageId":"213","endLine":24,"endColumn":26},{"ruleId":"228","severity":1,"message":"249","line":64,"column":8,"nodeType":"230","endLine":64,"endColumn":46,"suggestions":"250"},{"ruleId":"210","severity":1,"message":"251","line":2,"column":17,"nodeType":"212","messageId":"213","endLine":2,"endColumn":21},{"ruleId":"210","severity":1,"message":"252","line":21,"column":22,"nodeType":"212","messageId":"213","endLine":21,"endColumn":35},{"ruleId":"210","severity":1,"message":"253","line":8,"column":23,"nodeType":"212","messageId":"213","endLine":8,"endColumn":30},"no-unused-vars","'createStore' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["254"],"no-negated-in-lhs",["255"],"'Nav' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'Row' is defined but never used.","'Container' is defined but never used.","'Col' is defined but never used.","'useState' is defined but never used.","'products' is defined but never used.","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["256"],"'errorProductReview' is assigned a value but never used.","'data' is assigned a value but never used.","'width' is defined but never used.","'USER_UPDATE_RESET' is defined but never used.","'login' is defined but never used.","'Redirect' is defined but never used.","'getUserDetails' is defined but never used.","'register' is defined but never used.","'setMessage' is assigned a value but never used.","'success' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'userInfo'. Either include them or remove the dependency array.",["257"],"'shippingAddress' is assigned a value but never used.","'saveShippingAddress' is defined but never used.","'createOrder' is defined but never used.","'successDeliver' is assigned a value but never used.","'sdkReady' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["258"],"'lazy' is defined but never used.","'loadingUpdate' is assigned a value but never used.","'product' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},"Update the dependencies array to be: [dispatch]",{"range":"265","text":"266"},"Update the dependencies array to be: [dispatch, history, userInfo]",{"range":"267","text":"268"},"Update the dependencies array to be: [dispatch, orderId, successPay, order, userInfo]",{"range":"269","text":"270"},[493,495],"[dispatch]",[1500,1502],"[dispatch, history, userInfo]",[2212,2250],"[dispatch, orderId, successPay, order, userInfo]"]