{"ast":null,"code":"import { PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DETAIL_FAIL, PRODUCT_DETAIL_REQUEST, PRODUCT_DETAIL_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS } from \"../constants/constants\";\nimport axios from 'axios';\nexport const listProducts = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: PRODUCT_LIST_REQUEST\n      });\n      const {\n        data\n      } = await axios.get('http://localhost:5000/api/products/');\n      dispatch({\n        type: PRODUCT_LIST_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_LIST_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const getProductById = id => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: PRODUCT_DETAIL_REQUEST\n      });\n      const {\n        data\n      } = await axios.get(`http://localhost:5000/api/products/${id}`);\n      dispatch({\n        type: PRODUCT_DETAIL_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_DETAIL_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const updateProductAdmin = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST\n    });\n    const userInfo = JSON.parse(localStorage.getItem('userInfo'));\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`http://localhost:5000/api/products/admin/edit/product/${product._id}`, product, config);\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: PRODUCT_DETAIL_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n\n  dispatch({\n    type: PRODUCT_UPDATE_FAIL\n  });\n};\nexport const deleteProduct = id => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: PRODUCT_DELETE_REQUEST\n      });\n      const userInfo = JSON.parse(localStorage.getItem('userInfo'));\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.delete(`http://localhost:5000/api/products${id}`, config);\n      dispatch({\n        type: PRODUCT_DELETE_SUCCESS\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: PRODUCT_DELETE_FAIL\n      });\n    }\n  };\n};\nexport const createProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`http://localhost:5000/api/products`, product, config);\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/redux/actions/productAction.js"],"names":["PRODUCT_CREATE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DETAIL_FAIL","PRODUCT_DETAIL_REQUEST","PRODUCT_DETAIL_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","axios","listProducts","dispatch","type","data","get","payload","error","response","message","getProductById","id","updateProductAdmin","product","getState","userInfo","JSON","parse","localStorage","getItem","config","headers","Authorization","token","put","_id","console","log","deleteProduct","delete","createProduct","userLogin","post"],"mappings":"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","sourcesContent":["import { PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DETAIL_FAIL, PRODUCT_DETAIL_REQUEST, PRODUCT_DETAIL_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS } from \"../constants/constants\"\nimport  axios from 'axios' \n\n\nexport const listProducts =  () => {\n    return async (dispatch) => {\n    try {\n        dispatch({type: PRODUCT_LIST_REQUEST})\n\n        const {data} = await axios.get('http://localhost:5000/api/products/')\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        }) \n\n    } catch(error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n    }\n}\n\nexport const getProductById =  (id) => {\n    return async (dispatch) => {\n    try {\n        dispatch({type: PRODUCT_DETAIL_REQUEST})\n\n        const {data} = await axios.get(`http://localhost:5000/api/products/${id}`)\n       \n        dispatch({\n            type: PRODUCT_DETAIL_SUCCESS,\n            payload: data\n        }) \n\n    } catch(error) {\n        dispatch({\n            type: PRODUCT_DETAIL_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n    }\n}\nexport const updateProductAdmin = (product) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: PRODUCT_UPDATE_REQUEST,\n      })\n  \n      const userInfo = JSON.parse(localStorage.getItem('userInfo'))\n    \n      const config = {\n          headers: {\n              'Content-Type' : 'application/json',\n              Authorization: `Bearer ${userInfo.token}`\n          }\n      }\n      \n      const { data } = await axios.put(\n        `http://localhost:5000/api/products/admin/edit/product/${product._id}`, product, config )\n  \n      dispatch({\n        type: PRODUCT_UPDATE_SUCCESS,\n        payload: data,\n      })\n      dispatch({ type: PRODUCT_DETAIL_SUCCESS, payload: data })\n    } catch (error) {\n        console.log(error);\n      }\n      dispatch({\n        type: PRODUCT_UPDATE_FAIL\n\n      })\n    }\n\n    export const deleteProduct  =  (id) => {\n        return async (dispatch, getState) => {\n         \n        try {\n            dispatch({type: PRODUCT_DELETE_REQUEST})\n    \n            const userInfo = JSON.parse(localStorage.getItem('userInfo'))\n        \n            const config = {\n                headers: {\n                    'Content-Type' : 'application/json',\n                    Authorization: `Bearer ${userInfo.token}`\n                }\n            }\n            const {data} = await axios.delete(`http://localhost:5000/api/products${id}`, config)\n        \n            dispatch({\n                type: PRODUCT_DELETE_SUCCESS })\n     } catch(error) {\n           console.log(error);\n           dispatch({\n               type: PRODUCT_DELETE_FAIL\n           })\n        }\n        }\n    }\n    export const createProduct = (product) => async (dispatch, getState) => {\n        try {\n          dispatch({\n            type: PRODUCT_CREATE_REQUEST,\n          })\n      \n          const {\n            userLogin: { userInfo },\n          } = getState()\n      \n          const config = {\n            headers: {\n              Authorization: `Bearer ${userInfo.token}`,\n            },\n          }\n      \n          const { data } = await axios.post(`http://localhost:5000/api/products`, product, config)\n      \n          dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n          })\n        } catch (error) {\n          \n          dispatch({\n            type: PRODUCT_CREATE_FAIL\n          })\n        }\n      }\n\n"]},"metadata":{},"sourceType":"module"}