{"ast":null,"code":"var _jsxFileName = \"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/ProductEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { getProductById } from '../redux/actions/productAction';\nimport { getUserDetails, updateUserProfileAdmin } from '../redux/actions/userAction';\nimport { USER_UPDATE_ADMIN_RESET } from '../redux/constants/constants';\nimport { history } from '../utils/history/history';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductEditScreen(_ref) {\n  _s();\n\n  var _match$params;\n\n  let {\n    match\n  } = _ref;\n  const productId = match === null || match === void 0 ? void 0 : (_match$params = match.params) === null || _match$params === void 0 ? void 0 : _match$params.id;\n  const [name, setName] = useState('');\n  const [category, setCategory] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState('');\n  const [countInStock, setCountInStock] = useState('');\n  const dispatch = useDispatch();\n  const {\n    loading,\n    product\n  } = useSelector(state => state === null || state === void 0 ? void 0 : state.productReducer); //const  { loading: loadingUpdate, success: successUpdate } = useSelector((state) => state?.userUpdateAdmin)\n\n  console.log('loading', loading); // useEffect(() => {\n  //    if(successUpdate) {\n  //        dispatch({type: USER_UPDATE_ADMIN_RESET})\n  //        history.push('/admin/users')\n  //    } else {\n  //        if(!user?.name || user?._id !== productId) {\n  //            dispatch(getUserDetails(userId))\n  //        } else {\n  //            setName(user?.name)\n  //            setCategory(user?.category)\n  //            setDescription(user?.description)\n  //            setPrice(user?.price)\n  //            setCountInStock(user?.countInStock)\n  //        }\n  //    }\n  // }, [successUpdate, dispatch, user, userId]);\n\n  console.log('product', product);\n  useEffect(() => {\n    dispatch(getProductById(productId));\n  }, [dispatch, productId]);\n\n  const submitHandler = e => {\n    e.preventDefault(); // const updatedData = {_id: userId, name, email, isAdmin}\n    // dispatch(updateUserProfileAdmin(updatedData))\n\n    console.log('submitHandler');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/admin/products\",\n      className: \"btn btn-light my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 10\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"name\",\n            onChange: e => setName(e.target.value),\n            value: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"category\",\n            onChange: e => setCategory(e.target.value),\n            value: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"description\",\n            onChange: e => setDescription(e.target.value),\n            value: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"price\",\n            onChange: e => setPrice(e.target.value),\n            value: price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control\",\n            name: \"countInStock\",\n            onChange: e => setCountInStock(e.target.value),\n            value: countInStock\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ProductEditScreen, \"vF4vtzQBJdjfT/zDx3RP/7RKZro=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"sources":["/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/ProductEditScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","NavLink","getProductById","getUserDetails","updateUserProfileAdmin","USER_UPDATE_ADMIN_RESET","history","ProductEditScreen","match","productId","params","id","name","setName","category","setCategory","description","setDescription","price","setPrice","countInStock","setCountInStock","dispatch","loading","product","state","productReducer","console","log","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { getProductById } from '../redux/actions/productAction';\nimport { getUserDetails, updateUserProfileAdmin } from '../redux/actions/userAction';\nimport { USER_UPDATE_ADMIN_RESET } from '../redux/constants/constants';\nimport { history } from '../utils/history/history';\n\nexport default function ProductEditScreen({ match }) {\n    const productId = match?.params?.id\n\n    const [name, setName] = useState('')\n    const [category, setCategory] = useState('')\n    const [description, setDescription] = useState('')\n    const [price, setPrice] = useState('')\n    const [countInStock, setCountInStock] = useState('')\n\n\n    const dispatch = useDispatch()\n\n    const  { loading, product } = useSelector((state) => state?.productReducer)\n    //const  { loading: loadingUpdate, success: successUpdate } = useSelector((state) => state?.userUpdateAdmin)\n    console.log('loading', loading);\n    // useEffect(() => {\n    //    if(successUpdate) {\n    //        dispatch({type: USER_UPDATE_ADMIN_RESET})\n    //        history.push('/admin/users')\n    //    } else {\n    //        if(!user?.name || user?._id !== productId) {\n    //            dispatch(getUserDetails(userId))\n    //        } else {\n    //            setName(user?.name)\n    //            setCategory(user?.category)\n    //            setDescription(user?.description)\n    //            setPrice(user?.price)\n    //            setCountInStock(user?.countInStock)\n    //        }\n    //    }\n    // }, [successUpdate, dispatch, user, userId]);\n    console.log('product', product)\n\n    useEffect(() => {\n        dispatch(getProductById(productId))\n    }, [dispatch, productId]);\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        // const updatedData = {_id: userId, name, email, isAdmin}\n        // dispatch(updateUserProfileAdmin(updatedData))\n        console.log('submitHandler');\n      }\n\n  return <div>\n<NavLink to='/admin/products' className='btn btn-light my-3'>\n        Go Back\n      </NavLink>\n      <div className = \"container\">\n        <h1>Edit Product</h1>\n        {loading ? (\n         <h1>Loading ...</h1>\n        ) : (\n            <form onSubmit = {submitHandler}>\n            <div className=\"mb-3\">\n            <label className=\"form-label\">Product Name</label>\n            <input type=\"text\" className=\"form-control\" name = \"name\" onChange={(e) => setName(e.target.value)\n            }  value = {name}/>\n            </div>\n            \n            <div className=\"mb-3\">\n            <label className=\"form-label\">Category</label>\n            <input type=\"text\" className=\"form-control\" name = \"category\" onChange={(e) => setCategory(e.target.value)}  value = {category}/>\n            </div>\n            <div className=\"mb-3\">\n            <label className=\"form-label\">Description</label>\n            <input type=\"text\" className=\"form-control\" name = \"description\" onChange={(e) => setDescription(e.target.value)}  value = {description}/>\n            </div>\n            <div className=\"mb-3\">\n            <label className=\"form-label\">Price</label>\n            <input type=\"text\" className=\"form-control\" name = \"price\" onChange={(e) => setPrice(e.target.value)}  value = {price}/>\n            </div>\n            <div className=\"mb-3\">\n            <label className=\"form-label\">Stock</label>\n            <input type=\"number\" className=\"form-control\" name = \"countInStock\" onChange={(e) => setCountInStock(e.target.value)}  value = {countInStock}/>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Update</button>\n            </form>\n        )}\n      </div>\n\n  </div>;\n}\n"]},"metadata":{},"sourceType":"module"}