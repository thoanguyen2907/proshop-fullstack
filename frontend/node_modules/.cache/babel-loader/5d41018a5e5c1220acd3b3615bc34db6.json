{"ast":null,"code":"import axios from 'axios';\nimport { get } from 'jquery';\nimport { USER_DETAIL_FAIL, USER_DETAIL_REQUEST, USER_DETAIL_SUCCESS, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS } from '../constants/constants';\nexport const login = (email, password) => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: USER_LOGIN_REQUEST\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const {\n        data\n      } = await axios.post('http://localhost:5000/api/users/login', {\n        email,\n        password\n      });\n      console.log(data);\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: data\n      });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const logout = (email, password) => {\n  return async (dispatch, getState) => {\n    localStorage.removeItem('userInfo');\n    dispatch({\n      type: USER_LOGOUT\n    });\n  };\n};\nexport const register = (name, email, password) => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: USER_REGISTER_REQUEST\n      });\n      const {\n        data\n      } = await axios.post('http://localhost:5000/api/users/register', {\n        name,\n        email,\n        password\n      });\n      console.log(data);\n      dispatch({\n        type: USER_REGISTER_SUCCESS,\n        payload: data\n      });\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: data\n      });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: USER_REGISTER_FAIL\n      });\n    }\n  };\n};\nexport const getUserDetails = id => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: USER_DETAIL_REQUEST\n      });\n      const userInfo = JSON.parse(localStorage.getItem('userInfo'));\n      console.log('userInfo', userInfo);\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(`http://localhost:5000/api/users/${userInfo._id}`, config);\n      console.log(\"data\", data);\n      dispatch({\n        type: USER_DETAIL_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: USER_DETAIL_FAIL\n      });\n    }\n  };\n};\nexport const updateUserProfileFrontEnd = user => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: USER_UPDATE_REQUEST\n      });\n      const userInfo = JSON.parse(localStorage.getItem('userInfo'));\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.put('http://localhost:5000/api/users/profile', user, config);\n      console.log(\"data\", data);\n      dispatch({\n        type: USER_UPDATE_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: USER_UPDATE_FAIL\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/redux/actions/userAction.js"],"names":["axios","get","USER_DETAIL_FAIL","USER_DETAIL_REQUEST","USER_DETAIL_SUCCESS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","login","email","password","dispatch","getState","type","config","headers","data","post","console","log","payload","localStorage","setItem","JSON","stringify","error","logout","removeItem","register","name","getUserDetails","id","userInfo","parse","getItem","Authorization","token","_id","updateUserProfileFrontEnd","user","put"],"mappings":"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","sourcesContent":["import  axios from 'axios' \nimport { get } from 'jquery'\nimport { USER_DETAIL_FAIL, USER_DETAIL_REQUEST, USER_DETAIL_SUCCESS, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS } from '../constants/constants'\n\n\n\nexport const login  =  (email, password) => {\n    return async (dispatch, getState) => {\n    try {\n        dispatch({type: USER_LOGIN_REQUEST})\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const {data} = await axios.post('http://localhost:5000/api/users/login', {email, password})\n        console.log(data);\n        \n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch(error) {\n       console.log(error);\n    }\n    }\n}\n\nexport const logout  =  (email, password) => {\n    return async (dispatch, getState) => {\n  localStorage.removeItem('userInfo')\n  dispatch({type: USER_LOGOUT})\n    }\n}\n\nexport const register  =  (name, email, password) => {\n    return async (dispatch, getState) => {\n    try {\n        dispatch({type: USER_REGISTER_REQUEST})\n       \n        const {data} = await axios.post('http://localhost:5000/api/users/register', {name, email, password})\n        console.log(data);\n        \n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch(error) {\n       console.log(error);\n       dispatch({\n           type: USER_REGISTER_FAIL\n       })\n    }\n    }\n}\n\n\nexport const getUserDetails  =  (id) => {\n    return async (dispatch, getState) => {\n    try {\n        dispatch({type: USER_DETAIL_REQUEST})\n\n        const userInfo = JSON.parse(localStorage.getItem('userInfo'))\n        console.log('userInfo', userInfo);\n        \n        const config = {\n            headers: {\n                'Content-Type' : 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const {data} = await axios.get(`http://localhost:5000/api/users/${userInfo._id}`, config)\n        console.log(\"data\", data);\n        \n        dispatch({\n            type: USER_DETAIL_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n       console.log(error);\n       dispatch({\n           type: USER_DETAIL_FAIL\n       })\n    }\n    }\n}\n\nexport const updateUserProfileFrontEnd  =  (user) => {\n    return async (dispatch, getState) => {\n    try {\n        dispatch({type: USER_UPDATE_REQUEST})\n\n        const userInfo = JSON.parse(localStorage.getItem('userInfo'))\n            \n        const config = {\n            headers: {\n                'Content-Type' : 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const {data} = await axios.put('http://localhost:5000/api/users/profile', user, config)\n        console.log(\"data\", data);\n        \n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n       console.log(error);\n       dispatch({\n           type: USER_UPDATE_FAIL\n       })\n    }\n    }\n}\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}