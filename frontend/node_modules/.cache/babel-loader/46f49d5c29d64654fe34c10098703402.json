{"ast":null,"code":"import _slicedToArray from\"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{NavLink}from'react-router-dom';import{getUserDetails,updateUserProfileAdmin}from'../redux/actions/userAction';import{USER_UPDATE_ADMIN_RESET}from'../redux/constants/constants';import{history}from'../utils/history/history';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function UserEditScreen(_ref){var _match$params;var match=_ref.match;var userId=match===null||match===void 0?void 0:(_match$params=match.params)===null||_match$params===void 0?void 0:_match$params.id;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isAdmin=_useState6[0],setIsAdmin=_useState6[1];var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state===null||state===void 0?void 0:state.userDetail;}),loading=_useSelector.loading,user=_useSelector.user;var _useSelector2=useSelector(function(state){return state===null||state===void 0?void 0:state.userUpdateAdmin;}),loadingUpdate=_useSelector2.loading,successUpdate=_useSelector2.success;useEffect(function(){if(successUpdate){dispatch({type:USER_UPDATE_ADMIN_RESET});history.push('/admin/users');}else{if(!(user!==null&&user!==void 0&&user.name)||(user===null||user===void 0?void 0:user._id)!==userId){dispatch(getUserDetails(userId));}else{setName(user===null||user===void 0?void 0:user.name);setEmail(user===null||user===void 0?void 0:user.email);setIsAdmin(user===null||user===void 0?void 0:user.isAdmin);}}},[successUpdate,dispatch,user,userId]);var submitHandler=function submitHandler(e){e.preventDefault();var updatedData={_id:userId,name:name,email:email,isAdmin:isAdmin};dispatch(updateUserProfileAdmin(updatedData));};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(NavLink,{to:\"/admin/userlist\",className:\"btn btn-light my-3\",children:\"Go Back\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Edit User\"}),loadingUpdate&&/*#__PURE__*/_jsx(\"h1\",{children:\"Loading ...\"}),loading?/*#__PURE__*/_jsx(\"h1\",{children:\"Loading ...\"}):/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Your Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",name:\"name\",onChange:function onChange(e){return setName(e.target.value);},value:name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Email address\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",className:\"form-control\",name:\"email\",onChange:function onChange(e){return setEmail(e.target.value);},value:email})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-check mb-3\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:\"exampleCheck1\",checked:isAdmin,onChange:function onChange(e){return setIsAdmin(e.target.checked);}}),/*#__PURE__*/_jsx(\"label\",{className:\"form-check-label\",htmlFor:\"exampleCheck1\",children:\"Admin\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",children:\"Update\"})]})]})]});}","map":{"version":3,"sources":["/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/UserEditScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","NavLink","getUserDetails","updateUserProfileAdmin","USER_UPDATE_ADMIN_RESET","history","UserEditScreen","match","userId","params","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","state","userDetail","loading","user","userUpdateAdmin","loadingUpdate","successUpdate","success","type","push","_id","submitHandler","e","preventDefault","updatedData","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { getUserDetails, updateUserProfileAdmin } from '../redux/actions/userAction';\nimport { USER_UPDATE_ADMIN_RESET } from '../redux/constants/constants';\nimport { history } from '../utils/history/history';\n\nexport default function UserEditScreen({ match }) {\n    const userId = match?.params?.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n    const dispatch = useDispatch()\n\n    const  { loading, user } = useSelector((state) => state?.userDetail)\n    const  { loading: loadingUpdate, success: successUpdate } = useSelector((state) => state?.userUpdateAdmin)\n\n    useEffect(() => {\n       if(successUpdate) {\n           dispatch({type: USER_UPDATE_ADMIN_RESET})\n           history.push('/admin/users')\n       } else {\n           if(!user?.name || user?._id !== userId) {\n               dispatch(getUserDetails(userId))\n           } else {\n               setName(user?.name)\n               setEmail(user?.email)\n               setIsAdmin(user?.isAdmin)\n           }\n       }\n    }, [successUpdate, dispatch, user, userId]);\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        const updatedData = {_id: userId, name, email, isAdmin}\n        dispatch(updateUserProfileAdmin(updatedData))\n      }\n\n  return <div>\n<NavLink to='/admin/userlist' className='btn btn-light my-3'>\n        Go Back\n      </NavLink>\n      <div className = \"container\">\n        <h1>Edit User</h1>\n        {loadingUpdate && <h1>Loading ...</h1>}\n    \n        {loading ? (\n         <h1>Loading ...</h1>\n        ) : (\n            <form onSubmit = {submitHandler}>\n\n            <div className=\"mb-3\">\n            <label className=\"form-label\">Your Name</label>\n            <input type=\"text\" className=\"form-control\" name = \"name\" onChange={(e) => setName(e.target.value)\n            }  value = {name}/>\n            </div>\n            \n            <div className=\"mb-3\">\n            <label className=\"form-label\">Email address</label>\n            <input type=\"email\" className=\"form-control\" name = \"email\" onChange={(e) => setEmail(e.target.value)}  value = {email}/>\n            </div>\n\n            <div className=\"form-check mb-3\">\n    <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\" checked= {isAdmin}      onChange={(e) => setIsAdmin(e.target.checked)}/>\n    <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">Admin</label>\n  </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Update</button>\n            </form>\n        )}\n      </div>\n\n  </div>;\n}\n"]},"metadata":{},"sourceType":"module"}