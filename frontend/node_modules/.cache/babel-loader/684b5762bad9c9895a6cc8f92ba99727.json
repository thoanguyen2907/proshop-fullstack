{"ast":null,"code":"import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { productCreateReducer, productDeleteReducer, productReducer, productUpdateReducer } from './reducer/productReducer';\nimport { cartReducer } from './reducer/cartReducer';\nimport { userDetailReducer, userReducer, userUpdateReducer, userListReducer, userUpdateAdminReducer } from './reducer/userReducer';\nimport { orderCreateReducer, orderDetailReducer, orderPayReducer, orderListMyReducer, orderListAdminReducer } from './reducer/orderReducer';\nexport const rootReducer = combineReducers({\n  productReducer,\n  cart: cartReducer,\n  userLogin: userReducer,\n  userDetail: userDetailReducer,\n  userUpdateProfile: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetail: orderDetailReducer,\n  orderPay: orderPayReducer,\n  orderListAdmin: orderListAdminReducer,\n  orderListMy: orderListMyReducer,\n  userList: userListReducer,\n  userUpdateAdmin: userUpdateAdminReducer,\n  productUpdate: productUpdateReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethod') ? JSON.parse(localStorage.getItem('paymentMethod')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n    paymentMethod: paymentMethodFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nexport const store = createStore(rootReducer, initialState, applyMiddleware(thunk));","map":{"version":3,"sources":["/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/redux/rootReducer.js"],"names":["combineReducers","createStore","applyMiddleware","thunk","productCreateReducer","productDeleteReducer","productReducer","productUpdateReducer","cartReducer","userDetailReducer","userReducer","userUpdateReducer","userListReducer","userUpdateAdminReducer","orderCreateReducer","orderDetailReducer","orderPayReducer","orderListMyReducer","orderListAdminReducer","rootReducer","cart","userLogin","userDetail","userUpdateProfile","orderCreate","orderDetail","orderPay","orderListAdmin","orderListMy","userList","userUpdateAdmin","productUpdate","productDelete","productCreate","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","paymentMethodFromStorage","initialState","cartItems","shippingAddress","paymentMethod","userInfo","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAASC,oBAAT,EAA+BC,oBAA/B,EAAqDC,cAArD,EAAqEC,oBAArE,QAAiG,0BAAjG;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,iBAAT,EAA4BC,WAA5B,EAAyCC,iBAAzC,EAA2DC,eAA3D,EAA4EC,sBAA5E,QAA0G,uBAA1G;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,EAAiDC,eAAjD,EAAkEC,kBAAlE,EAAsFC,qBAAtF,QAAmH,wBAAnH;AACA,OAAO,MAAMC,WAAW,GAAGnB,eAAe,CAAC;AACvCM,EAAAA,cADuC;AAEvCc,EAAAA,IAAI,EAAEZ,WAFiC;AAGvCa,EAAAA,SAAS,EAAEX,WAH4B;AAIvCY,EAAAA,UAAU,EAAEb,iBAJ2B;AAKvCc,EAAAA,iBAAiB,EAAEZ,iBALoB;AAMvCa,EAAAA,WAAW,EAAEV,kBAN0B;AAOvCW,EAAAA,WAAW,EAAEV,kBAP0B;AAQvCW,EAAAA,QAAQ,EAAGV,eAR4B;AASvCW,EAAAA,cAAc,EAAET,qBATuB;AAUvCU,EAAAA,WAAW,EAAGX,kBAVyB;AAWvCY,EAAAA,QAAQ,EAAEjB,eAX6B;AAYvCkB,EAAAA,eAAe,EAAGjB,sBAZqB;AAavCkB,EAAAA,aAAa,EAAExB,oBAbwB;AAcvCyB,EAAAA,aAAa,EAAE3B,oBAdwB;AAevC4B,EAAAA,aAAa,EAAE7B;AAfwB,CAAD,CAAnC;AAmBP,MAAM8B,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,EAAjH;AAEA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnC,GAAkF,IAA9G;AAEA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAA0CC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAA1C,GAAgG,EAAnI;AAEA,MAAMK,wBAAwB,GAAGN,YAAY,CAACC,OAAb,CAAqB,eAArB,IAAwCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAX,CAAxC,GAA4F,EAA7H;AAEA,MAAMM,YAAY,GAAG;AACjBtB,EAAAA,IAAI,EAAE;AACFuB,IAAAA,SAAS,EAAET,oBADT;AAEFU,IAAAA,eAAe,EAAEJ,0BAFf;AAGFK,IAAAA,aAAa,EAAEJ;AAHb,GADW;AAMjBpB,EAAAA,SAAS,EAAE;AACPyB,IAAAA,QAAQ,EAAEP;AADH;AANM,CAArB;AAcA,OAAO,MAAMQ,KAAK,GAAG9C,WAAW,CAACkB,WAAD,EAAcuB,YAAd,EAA4BxC,eAAe,CAACC,KAAD,CAA3C,CAAzB","sourcesContent":["import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport { productCreateReducer, productDeleteReducer, productReducer, productUpdateReducer } from './reducer/productReducer';\nimport { cartReducer } from './reducer/cartReducer';\nimport { userDetailReducer, userReducer, userUpdateReducer,userListReducer, userUpdateAdminReducer } from './reducer/userReducer';\nimport { orderCreateReducer, orderDetailReducer, orderPayReducer, orderListMyReducer, orderListAdminReducer } from './reducer/orderReducer';\nexport const rootReducer = combineReducers({\n    productReducer,\n    cart: cartReducer,\n    userLogin: userReducer,\n    userDetail: userDetailReducer,\n    userUpdateProfile: userUpdateReducer,\n    orderCreate: orderCreateReducer,\n    orderDetail: orderDetailReducer,\n    orderPay:  orderPayReducer,\n    orderListAdmin: orderListAdminReducer,\n    orderListMy:  orderListMyReducer,\n    userList: userListReducer,\n    userUpdateAdmin:  userUpdateAdminReducer,\n    productUpdate: productUpdateReducer,\n    productDelete: productDeleteReducer,\n    productCreate: productCreateReducer\n\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethod') ? JSON.parse(localStorage.getItem('paymentMethod')) : {}\n\nconst initialState = {\n    cart: {\n        cartItems: cartItemsFromStorage,\n        shippingAddress: shippingAddressFromStorage,\n        paymentMethod: paymentMethodFromStorage\n    }, \n    userLogin: {\n        userInfo: userInfoFromStorage\n    },\n\n\n}\n\n\nexport const store = createStore(rootReducer, initialState, applyMiddleware(thunk)); "]},"metadata":{},"sourceType":"module"}