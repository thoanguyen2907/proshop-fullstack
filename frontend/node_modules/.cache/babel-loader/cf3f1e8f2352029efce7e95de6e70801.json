{"ast":null,"code":"import _slicedToArray from\"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{useDispatch,useSelector}from'react-redux';import CheckoutSteps from'../components/CheckoutSteps';import{savePaymentMethod,saveShippingAddress}from'../redux/actions/cartAction';import{history}from'../utils/history/history';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function PaymentScreen(){var _useSelector=useSelector(function(state){return state.cart;}),shippingAddress=_useSelector.shippingAddress;var dispatch=useDispatch();console.log('shippingAddress',shippingAddress);if(!shippingAddress){history.push('/shipping');}var _useState=useState('Paypal'),_useState2=_slicedToArray(_useState,2),paymentMethod=_useState2[0],setPaymentMethod=_useState2[1];var submitHandler=function submitHandler(e){e.preventDefault();dispatch(savePaymentMethod(paymentMethod));history.push('placeorder');};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Payment Method\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"form-control\",onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"input-group-prepend mx-3\",children:/*#__PURE__*/_jsx(\"div\",{className:\"input-group-text\",children:/*#__PURE__*/_jsx(\"input\",{name:\"paymentMethod\",type:\"radio\",onChange:function onChange(e){return setPaymentMethod(e.target.value);},value:\"Paypal\",checked:true})})}),/*#__PURE__*/_jsx(\"p\",{children:\"Paypal or Credit Card\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",children:\"Submit\"})]})]});}","map":{"version":3,"sources":["/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/PaymentScreen.js"],"names":["React","useState","useDispatch","useSelector","CheckoutSteps","savePaymentMethod","saveShippingAddress","history","PaymentScreen","state","cart","shippingAddress","dispatch","console","log","push","paymentMethod","setPaymentMethod","submitHandler","e","preventDefault","target","value"],"mappings":"+KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,OAASC,iBAAT,CAA4BC,mBAA5B,KAAuD,6BAAvD,CACA,OAASC,OAAT,KAAwB,0BAAxB,C,wFAEA,cAAe,SAASC,CAAAA,aAAT,EAAyB,CACpC,iBAA0BL,WAAW,CAAC,SAAAM,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAV,EAAN,CAArC,CAAOC,eAAP,cAAOA,eAAP,CACA,GAAMC,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CAEAW,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAAgCH,eAAhC,EAEA,GAAG,CAACA,eAAJ,CAAqB,CACjBJ,OAAO,CAACQ,IAAR,CAAa,WAAb,EACH,CACD,cAA0Cd,QAAQ,CAAC,QAAD,CAAlD,wCAAOe,aAAP,eAAsBC,gBAAtB,eAGA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CACzBA,CAAC,CAACC,cAAF,GACAR,QAAQ,CAACP,iBAAiB,CAACW,aAAD,CAAlB,CAAR,CACAT,OAAO,CAACQ,IAAR,CAAa,YAAb,EAEH,CALD,CAMF,mBAAO,aAAK,SAAS,CAAC,WAAf,wBACA,KAAC,aAAD,EAAe,KAAK,KAApB,CAAqB,KAAK,KAA1B,CAA2B,KAAK,KAAhC,EADA,cAGH,sCAHG,cAKH,cAAM,SAAS,CAAC,cAAhB,CAA+B,QAAQ,CAAIG,aAA3C,wBACF,aAAK,SAAS,CAAC,aAAf,wBACF,YAAK,SAAS,CAAC,0BAAf,uBACE,YAAK,SAAS,CAAC,kBAAf,uBACE,cAAO,IAAI,CAAG,eAAd,CAA8B,IAAI,CAAC,OAAnC,CAA2C,QAAQ,CAAE,kBAACC,CAAD,QAAOF,CAAAA,gBAAgB,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV,CAAvB,EAArD,CACA,KAAK,CAAC,QADN,CACe,OAAO,KADtB,EADF,EADF,EADE,cAOF,4CAPE,GADE,cAYJ,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,iBAAhC,oBAZI,GALG,GAAP,CAoBD","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { savePaymentMethod, saveShippingAddress } from '../redux/actions/cartAction';\nimport { history } from '../utils/history/history';\n\nexport default function PaymentScreen() {\n    const {shippingAddress} = useSelector(state => state.cart)\n    const dispatch = useDispatch()\n\n    console.log('shippingAddress' , shippingAddress);\n\n    if(!shippingAddress) {\n        history.push('/shipping')\n    }\n    const [paymentMethod, setPaymentMethod] = useState('Paypal'); \n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('placeorder')\n\n    }\n  return <div className='container'>\n         <CheckoutSteps step1 step2 step3 />\n\n      <h1>Payment Method</h1>\n\n      <form className=\"form-control\" onSubmit = {submitHandler}>\n    <div className=\"input-group\">\n  <div className=\"input-group-prepend mx-3\">\n    <div className=\"input-group-text\">\n      <input name = \"paymentMethod\" type=\"radio\" onChange={(e) => setPaymentMethod(e.target.value)} \n      value=\"Paypal\" checked/>\n    </div>\n  </div>\n  <p>Paypal or Credit Card</p>\n</div>\n\n\n  <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n      </form>\n  </div>;\n}\n"]},"metadata":{},"sourceType":"module"}