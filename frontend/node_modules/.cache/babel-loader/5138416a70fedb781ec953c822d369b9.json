{"ast":null,"code":"import { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS } from \"../constants/constants\";\nimport axios from 'axios';\nexport const createOrder = order => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: ORDER_CREATE_REQUEST\n      });\n      const userInfo = JSON.parse(localStorage.getItem('userInfo'));\n      console.log(userInfo.token);\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.post('http://localhost:5000/api/orders/add', order, config);\n      dispatch({\n        type: ORDER_CREATE_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: ORDER_CREATE_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/redux/actions/orderAction.js"],"names":["ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","axios","createOrder","order","dispatch","type","userInfo","JSON","parse","localStorage","getItem","console","log","token","config","headers","Authorization","data","post","payload","error","response","message"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,oBAA5B,EAAkDC,oBAAlD,QAA8E,wBAA9E;AACA,OAAQC,KAAR,MAAmB,OAAnB;AAEA,OAAO,MAAMC,WAAW,GAAKC,KAAD,IAAW;AACnC,SAAO,MAAOC,QAAP,IAAoB;AAC3B,QAAI;AACAA,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAEN;AAAP,OAAD,CAAR;AACA,YAAMO,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACO,KAArB;AACA,YAAMC,MAAM,GAAG;AACXC,QAAAA,OAAO,EAAE;AACL,0BAAiB,kBADZ;AAELC,UAAAA,aAAa,EAAG,UAASV,QAAQ,CAACO,KAAM;AAFnC;AADE,OAAf;AAMA,YAAM;AAACI,QAAAA;AAAD,UAAS,MAAMhB,KAAK,CAACiB,IAAN,CAAW,sCAAX,EAAmDf,KAAnD,EAA0DW,MAA1D,CAArB;AAEAV,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEL,oBADD;AAELmB,QAAAA,OAAO,EAAEF;AAFJ,OAAD,CAAR;AAKH,KAjBD,CAiBE,OAAMG,KAAN,EAAa;AACXhB,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEP,iBADD;AAELqB,QAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GAAgDF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAApE,GAA8EF,KAAK,CAACE;AAFxF,OAAD,CAAR;AAIH;AACA,GAxBD;AAyBH,CA1BM","sourcesContent":["import { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS } from \"../constants/constants\"\nimport  axios from 'axios' \n\nexport const createOrder =  (order) => {\n    return async (dispatch) => {\n    try {\n        dispatch({type: ORDER_CREATE_REQUEST})\n        const userInfo = JSON.parse(localStorage.getItem('userInfo'))\n        console.log(userInfo.token);\n        const config = {\n            headers: {\n                'Content-Type' : 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const {data} = await axios.post('http://localhost:5000/api/orders/add', order, config)\n       \n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        }) \n\n    } catch(error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n    }\n}"]},"metadata":{},"sourceType":"module"}