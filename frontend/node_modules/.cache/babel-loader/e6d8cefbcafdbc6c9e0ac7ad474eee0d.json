{"ast":null,"code":"import { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAIL_FAIL, ORDER_DETAIL_REQUEST, ORDER_DETAIL_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from \"../constants/constants\";\nimport axios from 'axios';\nexport const createOrder = order => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: ORDER_CREATE_REQUEST\n      });\n      const userInfo = JSON.parse(localStorage.getItem('userInfo'));\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.post('http://localhost:5000/api/orders/add', order, config);\n      dispatch({\n        type: ORDER_CREATE_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: ORDER_CREATE_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const getOrderDetail = id => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: ORDER_DETAIL_REQUEST\n      });\n      const userInfo = JSON.parse(localStorage.getItem('userInfo'));\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(`http://localhost:5000/api/orders/${id}`, config);\n      dispatch({\n        type: ORDER_DETAIL_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: ORDER_DETAIL_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const payOrder = (orderId, paymentResult) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: ORDER_PAY_REQUEST\n      });\n      const userInfo = JSON.parse(localStorage.getItem('userInfo'));\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.put(`http://localhost:5000/api/orders/${orderId}/pay`, paymentResult, config);\n      dispatch({\n        type: ORDER_PAY_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: ORDER_PAY_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const listMyOrders = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: ORDER_LIST_MY_REQUEST\n      });\n      const userInfo = JSON.parse(localStorage.getItem('userInfo'));\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get('http://localhost:5000/api/orders/myorders', config);\n      dispatch({\n        type: ORDER_LIST_MY_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: ORDER_LIST_MY_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/redux/actions/orderAction.js"],"names":["ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAIL_FAIL","ORDER_DETAIL_REQUEST","ORDER_DETAIL_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","axios","createOrder","order","dispatch","type","userInfo","JSON","parse","localStorage","getItem","config","headers","Authorization","token","data","post","payload","error","response","message","getOrderDetail","id","get","payOrder","orderId","paymentResult","put","listMyOrders"],"mappings":"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","sourcesContent":["import { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAIL_FAIL, ORDER_DETAIL_REQUEST, ORDER_DETAIL_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from \"../constants/constants\"\nimport  axios from 'axios' \n\nexport const createOrder =  (order) => {\n    return async (dispatch) => {\n    try {\n        dispatch({type: ORDER_CREATE_REQUEST})\n        const userInfo = JSON.parse(localStorage.getItem('userInfo'))\n   \n        const config = {\n            headers: {\n                'Content-Type' : 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const {data} = await axios.post('http://localhost:5000/api/orders/add', order, config)\n       \n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        }) \n\n    } catch(error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n    }\n}\n\n\nexport const getOrderDetail =  (id) => {\n    return async (dispatch) => {\n    try {\n        dispatch({type: ORDER_DETAIL_REQUEST})\n        const userInfo = JSON.parse(localStorage.getItem('userInfo'))\n     \n        const config = {\n            headers: {\n                'Content-Type' : 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const {data} = await axios.get(`http://localhost:5000/api/orders/${id}`, config)\n       \n        dispatch({\n            type: ORDER_DETAIL_SUCCESS,\n            payload: data\n        }) \n\n    } catch(error) {\n        dispatch({\n            type: ORDER_DETAIL_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n    }\n}\n\n\nexport const payOrder =  (orderId, paymentResult) => {\n    return async (dispatch) => {\n    try {\n        dispatch({type: ORDER_PAY_REQUEST})\n        const userInfo = JSON.parse(localStorage.getItem('userInfo'))\n        const config = {\n            headers: {\n                'Content-Type' : 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const {data} = await axios.put(`http://localhost:5000/api/orders/${orderId}/pay`, paymentResult, config)\n       \n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        }) \n    } catch(error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n    }\n}\n\nexport const listMyOrders =  () => {\n    return async (dispatch) => {\n    try {\n        dispatch({type: ORDER_LIST_MY_REQUEST})\n        const userInfo = JSON.parse(localStorage.getItem('userInfo'))\n        const config = {\n            headers: {\n                'Content-Type' : 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const {data} = await axios.get('http://localhost:5000/api/orders/myorders', config)\n       \n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        }) \n    } catch(error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}