{"ast":null,"code":"var _jsxFileName = \"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/UserEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserEditScreen(_ref) {\n  _s();\n\n  let {\n    match\n  } = _ref;\n  const userId = match.params.id;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const dispatch = useDispatch();\n  const {\n    loading,\n    user\n  } = useSelector(state => state.userDetail);\n  const {\n    loading: loadingUpdate,\n    success: successUpdate\n  } = useSelector(state => state.userUpdateAdmin);\n\n  const submitHandler = e => {\n    e.preventDefault(); // dispatch(updateUser({ _id: userId, name, email, isAdmin }))\n\n    console.log('submitHandler');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/admin/userlist\",\n      className: \"btn btn-light my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 27\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 10\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Your Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"name\",\n            onChange: e => setName(e.target.value),\n            value: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-control\",\n            name: \"email\",\n            onChange: e => setEmail(e.target.email),\n            value: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-check mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            class: \"form-check-input\",\n            id: \"exampleCheck1\",\n            checked: isAdmin,\n            onChange: e => setIsAdmin(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"form-check-label\",\n            for: \"exampleCheck1\",\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n}\n\n_s(UserEditScreen, \"FxuZfFx/BglBGwWCLr94Hh1pzZo=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = UserEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"sources":["/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/screens/UserEditScreen.js"],"names":["React","useState","useDispatch","useSelector","NavLink","UserEditScreen","match","userId","params","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","loading","user","state","userDetail","loadingUpdate","success","successUpdate","userUpdateAdmin","submitHandler","e","preventDefault","console","log","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nexport default function UserEditScreen({ match }) {\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n    const dispatch = useDispatch()\n\n    const  { loading, user } = useSelector((state) => state.userDetail)\n    const  { loading: loadingUpdate, success: successUpdate } = useSelector((state) => state.userUpdateAdmin)\n    const submitHandler = (e) => {\n        e.preventDefault()\n        // dispatch(updateUser({ _id: userId, name, email, isAdmin }))\n        console.log('submitHandler');\n        \n      }\n\n  return <div>\n<NavLink to='/admin/userlist' className='btn btn-light my-3'>\n        Go Back\n      </NavLink>\n      <div className = \"container\">\n        <h1>Edit User</h1>\n        {loadingUpdate && <h1>Loading ...</h1>}\n    \n        {loading ? (\n         <h1>Loading ...</h1>\n        ) : (\n            <form onSubmit = {submitHandler}>\n\n            <div className=\"mb-3\">\n            <label className=\"form-label\">Your Name</label>\n            <input type=\"text\" className=\"form-control\" name = \"name\" onChange={(e) => setName(e.target.value)\n            }  value = {name}/>\n            \n            </div>\n            \n            <div className=\"mb-3\">\n            <label className=\"form-label\">Email address</label>\n            <input type=\"email\" className=\"form-control\" name = \"email\" onChange={(e) => setEmail(e.target.email)}  value = {email}/>\n            </div>\n            <div class=\"form-check mb-3\">\n    <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\" checked= {isAdmin}      onChange={(e) => setIsAdmin(e.target.checked)}/>\n    <label class=\"form-check-label\" for=\"exampleCheck1\">Admin</label>\n  </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Update</button>\n            </form>\n        )}\n      </div>\n\n  </div>;\n}\n"]},"metadata":{},"sourceType":"module"}