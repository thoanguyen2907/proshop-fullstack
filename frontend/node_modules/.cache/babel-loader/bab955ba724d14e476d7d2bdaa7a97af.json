{"ast":null,"code":"import axios from 'axios';\nimport { history } from '../../utils/history/history';\nimport { ORDER_LIST_MY_RESET, USER_DETAIL_FAIL, USER_DETAIL_REQUEST, USER_DETAIL_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_DETAIL_RESET } from '../constants/constants';\nexport const login = (email, password) => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: USER_LOGIN_REQUEST\n      });\n      const {\n        data\n      } = await axios.post('http://localhost:5000/api/users/login', {\n        email,\n        password\n      });\n      console.log(data);\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: data\n      });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const logout = (email, password) => {\n  return async (dispatch, getState) => {\n    localStorage.removeItem('userInfo');\n    dispatch({\n      type: USER_LOGOUT\n    });\n    dispatch({\n      type: USER_DETAIL_RESET\n    });\n    dispatch({\n      type: ORDER_LIST_MY_RESET\n    });\n    history.push('/login');\n  };\n};\nexport const register = (name, email, password) => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: USER_REGISTER_REQUEST\n      });\n      const {\n        data\n      } = await axios.post('http://localhost:5000/api/users/register', {\n        name,\n        email,\n        password\n      });\n      console.log(data);\n      dispatch({\n        type: USER_REGISTER_SUCCESS,\n        payload: data\n      });\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: data\n      });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: USER_REGISTER_FAIL\n      });\n    }\n  };\n};\nexport const getUserDetails = id => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: USER_DETAIL_REQUEST\n      });\n      const userInfo = JSON.parse(localStorage.getItem('userInfo'));\n      console.log('userInfo', userInfo);\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${id.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(`http://localhost:5000/api/users/${id}`, config);\n      console.log(\"data\", data);\n      dispatch({\n        type: USER_DETAIL_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: USER_DETAIL_FAIL\n      });\n    }\n  };\n};\nexport const updateUserProfileFrontEnd = user => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: USER_UPDATE_REQUEST\n      });\n      const userInfo = JSON.parse(localStorage.getItem('userInfo'));\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.put(`http://localhost:5000/api/users/profile/${userInfo._id}`, user, config);\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      dispatch({\n        type: USER_UPDATE_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: USER_UPDATE_FAIL\n      });\n    }\n  };\n};\nexport const getUserList = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: USER_LIST_REQUEST\n      });\n      const userInfo = JSON.parse(localStorage.getItem('userInfo'));\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get('http://localhost:5000/api/users', config);\n      dispatch({\n        type: USER_LIST_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: USER_LIST_FAIL\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/fullstack/proshop/frontend/src/redux/actions/userAction.js"],"names":["axios","history","ORDER_LIST_MY_RESET","USER_DETAIL_FAIL","USER_DETAIL_REQUEST","USER_DETAIL_SUCCESS","USER_LIST_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_DETAIL_RESET","login","email","password","dispatch","getState","type","data","post","console","log","payload","localStorage","setItem","JSON","stringify","error","logout","removeItem","push","register","name","getUserDetails","id","userInfo","parse","getItem","config","headers","Authorization","token","get","updateUserProfileFrontEnd","user","put","_id","getUserList"],"mappings":"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","sourcesContent":["import  axios from 'axios' \nimport { history } from '../../utils/history/history'\nimport { ORDER_LIST_MY_RESET, USER_DETAIL_FAIL, USER_DETAIL_REQUEST, USER_DETAIL_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_DETAIL_RESET } from '../constants/constants'\n\n\n\nexport const login  =  (email, password) => {\n    return async (dispatch, getState) => {\n    try {\n        dispatch({type: USER_LOGIN_REQUEST})\n        \n        const {data} = await axios.post('http://localhost:5000/api/users/login', {email, password})\n        console.log(data);\n        \n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch(error) {\n       console.log(error);\n    }\n    }\n}\n\nexport const logout  =  (email, password) => {\n    return async (dispatch, getState) => {\n  localStorage.removeItem('userInfo')\n  dispatch({type: USER_LOGOUT})\n  dispatch({type: USER_DETAIL_RESET})\n  dispatch({type: ORDER_LIST_MY_RESET})\n  history.push('/login')\n    }\n}\n\nexport const register  =  (name, email, password) => {\n    return async (dispatch, getState) => {\n    try {\n        dispatch({type: USER_REGISTER_REQUEST})\n       \n        const {data} = await axios.post('http://localhost:5000/api/users/register', {name, email, password})\n        console.log(data);\n        \n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch(error) {\n       console.log(error);\n       dispatch({\n           type: USER_REGISTER_FAIL\n       })\n    }\n    }\n}\n\n\nexport const getUserDetails  =  (id) => {\n    return async (dispatch, getState) => {\n    try {\n        dispatch({type: USER_DETAIL_REQUEST})\n\n        const userInfo = JSON.parse(localStorage.getItem('userInfo'))\n        console.log('userInfo', userInfo);\n        \n        const config = {\n            headers: {\n                'Content-Type' : 'application/json',\n                Authorization: `Bearer ${id.token}`\n            }\n        }\n        const {data} = await axios.get(`http://localhost:5000/api/users/${id}`, config)\n        console.log(\"data\", data);\n        \n        dispatch({\n            type: USER_DETAIL_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n       console.log(error);\n       dispatch({\n           type: USER_DETAIL_FAIL\n       })\n    }\n    }\n}\n\nexport const updateUserProfileFrontEnd  =  (user) => {\n    return async (dispatch, getState) => {\n     \n    try {\n        dispatch({type: USER_UPDATE_REQUEST})\n\n        const userInfo = JSON.parse(localStorage.getItem('userInfo'))\n    \n        const config = {\n            headers: {\n                'Content-Type' : 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const {data} = await axios.put(`http://localhost:5000/api/users/profile/${userInfo._id}`, user, config)\n    \n        localStorage.setItem('userInfo', JSON.stringify(data))\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n       console.log(error);\n       dispatch({\n           type: USER_UPDATE_FAIL\n       })\n    }\n    }\n}\n\nexport const getUserList  =  () => {\n    return async (dispatch, getState) => {\n     \n    try {\n        dispatch({type: USER_LIST_REQUEST})\n\n        const userInfo = JSON.parse(localStorage.getItem('userInfo'))\n    \n        const config = {\n            headers: {\n                'Content-Type' : 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const {data} = await axios.get('http://localhost:5000/api/users', config)\n    \n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n       console.log(error);\n       dispatch({\n           type: USER_LIST_FAIL\n       })\n    }\n    }\n}\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}